{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x3e9552207f9aE1cC220BaCFf2BF5386d8842184E"
  },
  "proxies": [
    {
      "address": "0xc2A630c053D12D63d32b025082f6Ba268db18300",
      "kind": "transparent"
    },
    {
      "address": "0x8663e687836De3091C85DAe06620741369b65f35",
      "txHash": "0x99a979cbeb1296e885c17033b8ed0f028cafd482f0f5d6adaa72cbe5ab9e1fee",
      "kind": "transparent"
    },
    {
      "address": "0x18D8212bC00106b93070123f325021C723D503a3",
      "txHash": "0xbbba1896882bb0da89619bfcb5cb7c8dd260a7a19b8cf6b9d3c503a14b86ea2f",
      "kind": "transparent"
    }
  ],
  "impls": {
    "8205e25ab44d03e2a4148f4cd4b0ad10fd6ccc6d71d0dc1b1f79ce25b1bce77a": {
      "address": "0xe0712877a3AF76B0611a33872534e08c39c601d5",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "contract": "LiquidityBridgeContract",
            "label": "bridge",
            "type": "t_contract(Bridge)2338",
            "src": "../project:/contracts/LiquidityBridgeContractV1.sol:99"
          },
          {
            "contract": "LiquidityBridgeContract",
            "label": "balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidityBridgeContractV1.sol:100"
          },
          {
            "contract": "LiquidityBridgeContract",
            "label": "collateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidityBridgeContractV1.sol:101"
          },
          {
            "contract": "LiquidityBridgeContract",
            "label": "pegoutCollateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidityBridgeContractV1.sol:102"
          },
          {
            "contract": "LiquidityBridgeContract",
            "label": "liquidityProviders",
            "type": "t_mapping(t_uint256,t_struct(LiquidityProvider)6996_storage)",
            "src": "../project:/contracts/LiquidityBridgeContractV1.sol:103"
          },
          {
            "contract": "LiquidityBridgeContract",
            "label": "callRegistry",
            "type": "t_mapping(t_bytes32,t_struct(Registry)6978_storage)",
            "src": "../project:/contracts/LiquidityBridgeContractV1.sol:104"
          },
          {
            "contract": "LiquidityBridgeContract",
            "label": "resignationBlockNum",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidityBridgeContractV1.sol:105"
          },
          {
            "contract": "LiquidityBridgeContract",
            "label": "minCollateral",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV1.sol:107"
          },
          {
            "contract": "LiquidityBridgeContract",
            "label": "minPegIn",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV1.sol:108"
          },
          {
            "contract": "LiquidityBridgeContract",
            "label": "rewardP",
            "type": "t_uint32",
            "src": "../project:/contracts/LiquidityBridgeContractV1.sol:110"
          },
          {
            "contract": "LiquidityBridgeContract",
            "label": "resignDelayInBlocks",
            "type": "t_uint32",
            "src": "../project:/contracts/LiquidityBridgeContractV1.sol:111"
          },
          {
            "contract": "LiquidityBridgeContract",
            "label": "dust",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV1.sol:112"
          },
          {
            "contract": "LiquidityBridgeContract",
            "label": "providerId",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV1.sol:113"
          },
          {
            "contract": "LiquidityBridgeContract",
            "label": "btcBlockTime",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV1.sol:115"
          },
          {
            "contract": "LiquidityBridgeContract",
            "label": "mainnet",
            "type": "t_bool",
            "src": "../project:/contracts/LiquidityBridgeContractV1.sol:116"
          },
          {
            "contract": "LiquidityBridgeContract",
            "label": "processedQuotes",
            "type": "t_mapping(t_bytes32,t_uint8)",
            "src": "../project:/contracts/LiquidityBridgeContractV1.sol:118"
          },
          {
            "contract": "LiquidityBridgeContract",
            "label": "registeredPegoutQuotes",
            "type": "t_mapping(t_bytes32,t_struct(PegOutQuote)9927_storage)",
            "src": "../project:/contracts/LiquidityBridgeContractV1.sol:119"
          },
          {
            "contract": "LiquidityBridgeContract",
            "label": "pegoutRegistry",
            "type": "t_mapping(t_bytes32,t_struct(PegoutRecord)6983_storage)",
            "src": "../project:/contracts/LiquidityBridgeContractV1.sol:120"
          }
        ],
        "types": {
          "t_contract(Bridge)2338": {
            "label": "contract Bridge"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(LiquidityProvider)6996_storage)": {
            "label": "mapping(uint256 => struct LiquidityBridgeContract.LiquidityProvider)"
          },
          "t_struct(LiquidityProvider)6996_storage": {
            "label": "struct LiquidityBridgeContract.LiquidityProvider",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "provider",
                "type": "t_address"
              },
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "apiBaseUrl",
                "type": "t_string_storage"
              },
              {
                "label": "status",
                "type": "t_bool"
              },
              {
                "label": "providerType",
                "type": "t_string_storage"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(Registry)6978_storage)": {
            "label": "mapping(bytes32 => struct LiquidityBridgeContract.Registry)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(Registry)6978_storage": {
            "label": "struct LiquidityBridgeContract.Registry",
            "members": [
              {
                "label": "timestamp",
                "type": "t_uint32"
              },
              {
                "label": "success",
                "type": "t_bool"
              }
            ]
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_bytes32,t_uint8)": {
            "label": "mapping(bytes32 => uint8)"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_bytes32,t_struct(PegOutQuote)9927_storage)": {
            "label": "mapping(bytes32 => struct Quotes.PegOutQuote)"
          },
          "t_struct(PegOutQuote)9927_storage": {
            "label": "struct Quotes.PegOutQuote",
            "members": [
              {
                "label": "lbcAddress",
                "type": "t_address"
              },
              {
                "label": "lpRskAddress",
                "type": "t_address"
              },
              {
                "label": "btcRefundAddress",
                "type": "t_bytes_storage"
              },
              {
                "label": "rskRefundAddress",
                "type": "t_address"
              },
              {
                "label": "lpBtcAddress",
                "type": "t_bytes_storage"
              },
              {
                "label": "callFee",
                "type": "t_uint256"
              },
              {
                "label": "penaltyFee",
                "type": "t_uint256"
              },
              {
                "label": "nonce",
                "type": "t_int64"
              },
              {
                "label": "deposityAddress",
                "type": "t_bytes_storage"
              },
              {
                "label": "value",
                "type": "t_uint256"
              },
              {
                "label": "agreementTimestamp",
                "type": "t_uint32"
              },
              {
                "label": "depositDateLimit",
                "type": "t_uint32"
              },
              {
                "label": "depositConfirmations",
                "type": "t_uint16"
              },
              {
                "label": "transferConfirmations",
                "type": "t_uint16"
              },
              {
                "label": "transferTime",
                "type": "t_uint32"
              },
              {
                "label": "expireDate",
                "type": "t_uint32"
              },
              {
                "label": "expireBlock",
                "type": "t_uint32"
              }
            ]
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_int64": {
            "label": "int64"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_bytes32,t_struct(PegoutRecord)6983_storage)": {
            "label": "mapping(bytes32 => struct LiquidityBridgeContract.PegoutRecord)"
          },
          "t_struct(PegoutRecord)6983_storage": {
            "label": "struct LiquidityBridgeContract.PegoutRecord",
            "members": [
              {
                "label": "depositTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "completed",
                "type": "t_bool"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "917d7c175a1885a117991616f0910bede6a05862080c26f877cb2de04b52bfb7": {
      "address": "0x4491F58ccA0355bfa073B3dBE6a818f26Df9397a",
      "txHash": "0xf5464d79261002494b22ad435d5ea156e573aa1ae38c07017b2c7762cfbe7ae0",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "bridge",
            "type": "t_contract(Bridge)2338",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:100"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:101"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "collateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:102"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "pegoutCollateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:103"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "liquidityProviders",
            "type": "t_mapping(t_uint256,t_struct(LiquidityProvider)6996_storage)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:104"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "callRegistry",
            "type": "t_mapping(t_bytes32,t_struct(Registry)6978_storage)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:105"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "resignationBlockNum",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:106"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "minCollateral",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:108"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "minPegIn",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:109"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "rewardP",
            "type": "t_uint32",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:111"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "resignDelayInBlocks",
            "type": "t_uint32",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:112"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "dust",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:113"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "providerId",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:114"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "btcBlockTime",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:116"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "mainnet",
            "type": "t_bool",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:117"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "processedQuotes",
            "type": "t_mapping(t_bytes32,t_uint8)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:119"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "registeredPegoutQuotes",
            "type": "t_mapping(t_bytes32,t_struct(PegOutQuote)10187_storage)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:120"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "pegoutRegistry",
            "type": "t_mapping(t_bytes32,t_struct(PegoutRecord)6983_storage)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:121"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "productFeePercentage",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:123"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "daoFeeCollectorAddress",
            "type": "t_address",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:124"
          }
        ],
        "types": {
          "t_contract(Bridge)2338": {
            "label": "contract Bridge"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(LiquidityProvider)6996_storage)": {
            "label": "mapping(uint256 => struct LiquidityBridgeContractV2.LiquidityProvider)"
          },
          "t_struct(LiquidityProvider)6996_storage": {
            "label": "struct LiquidityBridgeContractV2.LiquidityProvider",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "provider",
                "type": "t_address"
              },
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "apiBaseUrl",
                "type": "t_string_storage"
              },
              {
                "label": "status",
                "type": "t_bool"
              },
              {
                "label": "providerType",
                "type": "t_string_storage"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(Registry)6978_storage)": {
            "label": "mapping(bytes32 => struct LiquidityBridgeContractV2.Registry)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(Registry)6978_storage": {
            "label": "struct LiquidityBridgeContractV2.Registry",
            "members": [
              {
                "label": "timestamp",
                "type": "t_uint32"
              },
              {
                "label": "success",
                "type": "t_bool"
              }
            ]
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_bytes32,t_uint8)": {
            "label": "mapping(bytes32 => uint8)"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_bytes32,t_struct(PegOutQuote)10187_storage)": {
            "label": "mapping(bytes32 => struct QuotesV2.PegOutQuote)"
          },
          "t_struct(PegOutQuote)10187_storage": {
            "label": "struct QuotesV2.PegOutQuote",
            "members": [
              {
                "label": "lbcAddress",
                "type": "t_address"
              },
              {
                "label": "lpRskAddress",
                "type": "t_address"
              },
              {
                "label": "btcRefundAddress",
                "type": "t_bytes_storage"
              },
              {
                "label": "rskRefundAddress",
                "type": "t_address"
              },
              {
                "label": "lpBtcAddress",
                "type": "t_bytes_storage"
              },
              {
                "label": "callFee",
                "type": "t_uint256"
              },
              {
                "label": "penaltyFee",
                "type": "t_uint256"
              },
              {
                "label": "nonce",
                "type": "t_int64"
              },
              {
                "label": "deposityAddress",
                "type": "t_bytes_storage"
              },
              {
                "label": "value",
                "type": "t_uint256"
              },
              {
                "label": "agreementTimestamp",
                "type": "t_uint32"
              },
              {
                "label": "depositDateLimit",
                "type": "t_uint32"
              },
              {
                "label": "depositConfirmations",
                "type": "t_uint16"
              },
              {
                "label": "transferConfirmations",
                "type": "t_uint16"
              },
              {
                "label": "transferTime",
                "type": "t_uint32"
              },
              {
                "label": "expireDate",
                "type": "t_uint32"
              },
              {
                "label": "expireBlock",
                "type": "t_uint32"
              },
              {
                "label": "productFeeAmount",
                "type": "t_uint256"
              }
            ]
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_int64": {
            "label": "int64"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_bytes32,t_struct(PegoutRecord)6983_storage)": {
            "label": "mapping(bytes32 => struct LiquidityBridgeContractV2.PegoutRecord)"
          },
          "t_struct(PegoutRecord)6983_storage": {
            "label": "struct LiquidityBridgeContractV2.PegoutRecord",
            "members": [
              {
                "label": "depositTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "completed",
                "type": "t_bool"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "69cb605f452f7317cba55d1f5ca965e201610b091ff506817230044b030565e7": {
      "address": "0xEdDedD91Dc6338245037674168326102D3387FdC",
      "txHash": "0x394f042ca86de441c0a2db90c48ed9dd016637d40baf39773fbbff6de43d7829",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "bridge",
            "type": "t_contract(Bridge)2338",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:100"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:101"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "collateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:102"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "pegoutCollateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:103"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "liquidityProviders",
            "type": "t_mapping(t_uint256,t_struct(LiquidityProvider)6996_storage)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:104"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "callRegistry",
            "type": "t_mapping(t_bytes32,t_struct(Registry)6978_storage)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:105"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "resignationBlockNum",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:106"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "minCollateral",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:108"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "minPegIn",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:109"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "rewardP",
            "type": "t_uint32",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:111"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "resignDelayInBlocks",
            "type": "t_uint32",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:112"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "dust",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:113"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "providerId",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:114"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "btcBlockTime",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:116"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "mainnet",
            "type": "t_bool",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:117"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "processedQuotes",
            "type": "t_mapping(t_bytes32,t_uint8)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:119"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "registeredPegoutQuotes",
            "type": "t_mapping(t_bytes32,t_struct(PegOutQuote)10187_storage)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:120"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "pegoutRegistry",
            "type": "t_mapping(t_bytes32,t_struct(PegoutRecord)6983_storage)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:121"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "productFeePercentage",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:123"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "daoFeeCollectorAddress",
            "type": "t_address",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:124"
          }
        ],
        "types": {
          "t_contract(Bridge)2338": {
            "label": "contract Bridge"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(LiquidityProvider)6996_storage)": {
            "label": "mapping(uint256 => struct LiquidityBridgeContractV2.LiquidityProvider)"
          },
          "t_struct(LiquidityProvider)6996_storage": {
            "label": "struct LiquidityBridgeContractV2.LiquidityProvider",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "provider",
                "type": "t_address"
              },
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "apiBaseUrl",
                "type": "t_string_storage"
              },
              {
                "label": "status",
                "type": "t_bool"
              },
              {
                "label": "providerType",
                "type": "t_string_storage"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(Registry)6978_storage)": {
            "label": "mapping(bytes32 => struct LiquidityBridgeContractV2.Registry)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(Registry)6978_storage": {
            "label": "struct LiquidityBridgeContractV2.Registry",
            "members": [
              {
                "label": "timestamp",
                "type": "t_uint32"
              },
              {
                "label": "success",
                "type": "t_bool"
              }
            ]
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_bytes32,t_uint8)": {
            "label": "mapping(bytes32 => uint8)"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_bytes32,t_struct(PegOutQuote)10187_storage)": {
            "label": "mapping(bytes32 => struct QuotesV2.PegOutQuote)"
          },
          "t_struct(PegOutQuote)10187_storage": {
            "label": "struct QuotesV2.PegOutQuote",
            "members": [
              {
                "label": "lbcAddress",
                "type": "t_address"
              },
              {
                "label": "lpRskAddress",
                "type": "t_address"
              },
              {
                "label": "btcRefundAddress",
                "type": "t_bytes_storage"
              },
              {
                "label": "rskRefundAddress",
                "type": "t_address"
              },
              {
                "label": "lpBtcAddress",
                "type": "t_bytes_storage"
              },
              {
                "label": "callFee",
                "type": "t_uint256"
              },
              {
                "label": "penaltyFee",
                "type": "t_uint256"
              },
              {
                "label": "nonce",
                "type": "t_int64"
              },
              {
                "label": "deposityAddress",
                "type": "t_bytes_storage"
              },
              {
                "label": "value",
                "type": "t_uint256"
              },
              {
                "label": "agreementTimestamp",
                "type": "t_uint32"
              },
              {
                "label": "depositDateLimit",
                "type": "t_uint32"
              },
              {
                "label": "depositConfirmations",
                "type": "t_uint16"
              },
              {
                "label": "transferConfirmations",
                "type": "t_uint16"
              },
              {
                "label": "transferTime",
                "type": "t_uint32"
              },
              {
                "label": "expireDate",
                "type": "t_uint32"
              },
              {
                "label": "expireBlock",
                "type": "t_uint32"
              },
              {
                "label": "productFeeAmount",
                "type": "t_uint256"
              }
            ]
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_int64": {
            "label": "int64"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_bytes32,t_struct(PegoutRecord)6983_storage)": {
            "label": "mapping(bytes32 => struct LiquidityBridgeContractV2.PegoutRecord)"
          },
          "t_struct(PegoutRecord)6983_storage": {
            "label": "struct LiquidityBridgeContractV2.PegoutRecord",
            "members": [
              {
                "label": "depositTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "completed",
                "type": "t_bool"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "667749700d32e89368f54bae55198f7807a194b576dc98eb820235cac1aecd4f": {
      "address": "0x5388Cc8A11c37D49b58eeC2AA680bBAc0fb4610a",
      "txHash": "0x6006f61872f5f8f90606ff7596ebea4fc61118111f3186602aec078a33f811c6",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "bridge",
            "type": "t_contract(Bridge)2338",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:100"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:101"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "collateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:102"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "pegoutCollateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:103"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "liquidityProviders",
            "type": "t_mapping(t_uint256,t_struct(LiquidityProvider)6996_storage)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:104"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "callRegistry",
            "type": "t_mapping(t_bytes32,t_struct(Registry)6978_storage)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:105"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "resignationBlockNum",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:106"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "minCollateral",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:108"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "minPegIn",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:109"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "rewardP",
            "type": "t_uint32",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:111"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "resignDelayInBlocks",
            "type": "t_uint32",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:112"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "dust",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:113"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "providerId",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:114"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "btcBlockTime",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:116"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "mainnet",
            "type": "t_bool",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:117"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "processedQuotes",
            "type": "t_mapping(t_bytes32,t_uint8)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:119"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "registeredPegoutQuotes",
            "type": "t_mapping(t_bytes32,t_struct(PegOutQuote)10187_storage)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:120"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "pegoutRegistry",
            "type": "t_mapping(t_bytes32,t_struct(PegoutRecord)6983_storage)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:121"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "productFeePercentage",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:123"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "daoFeeCollectorAddress",
            "type": "t_address",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:124"
          }
        ],
        "types": {
          "t_contract(Bridge)2338": {
            "label": "contract Bridge"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(LiquidityProvider)6996_storage)": {
            "label": "mapping(uint256 => struct LiquidityBridgeContractV2.LiquidityProvider)"
          },
          "t_struct(LiquidityProvider)6996_storage": {
            "label": "struct LiquidityBridgeContractV2.LiquidityProvider",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "provider",
                "type": "t_address"
              },
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "apiBaseUrl",
                "type": "t_string_storage"
              },
              {
                "label": "status",
                "type": "t_bool"
              },
              {
                "label": "providerType",
                "type": "t_string_storage"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(Registry)6978_storage)": {
            "label": "mapping(bytes32 => struct LiquidityBridgeContractV2.Registry)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(Registry)6978_storage": {
            "label": "struct LiquidityBridgeContractV2.Registry",
            "members": [
              {
                "label": "timestamp",
                "type": "t_uint32"
              },
              {
                "label": "success",
                "type": "t_bool"
              }
            ]
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_bytes32,t_uint8)": {
            "label": "mapping(bytes32 => uint8)"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_bytes32,t_struct(PegOutQuote)10187_storage)": {
            "label": "mapping(bytes32 => struct QuotesV2.PegOutQuote)"
          },
          "t_struct(PegOutQuote)10187_storage": {
            "label": "struct QuotesV2.PegOutQuote",
            "members": [
              {
                "label": "lbcAddress",
                "type": "t_address"
              },
              {
                "label": "lpRskAddress",
                "type": "t_address"
              },
              {
                "label": "btcRefundAddress",
                "type": "t_bytes_storage"
              },
              {
                "label": "rskRefundAddress",
                "type": "t_address"
              },
              {
                "label": "lpBtcAddress",
                "type": "t_bytes_storage"
              },
              {
                "label": "callFee",
                "type": "t_uint256"
              },
              {
                "label": "penaltyFee",
                "type": "t_uint256"
              },
              {
                "label": "nonce",
                "type": "t_int64"
              },
              {
                "label": "deposityAddress",
                "type": "t_bytes_storage"
              },
              {
                "label": "value",
                "type": "t_uint256"
              },
              {
                "label": "agreementTimestamp",
                "type": "t_uint32"
              },
              {
                "label": "depositDateLimit",
                "type": "t_uint32"
              },
              {
                "label": "depositConfirmations",
                "type": "t_uint16"
              },
              {
                "label": "transferConfirmations",
                "type": "t_uint16"
              },
              {
                "label": "transferTime",
                "type": "t_uint32"
              },
              {
                "label": "expireDate",
                "type": "t_uint32"
              },
              {
                "label": "expireBlock",
                "type": "t_uint32"
              },
              {
                "label": "productFeeAmount",
                "type": "t_uint256"
              }
            ]
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_int64": {
            "label": "int64"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_bytes32,t_struct(PegoutRecord)6983_storage)": {
            "label": "mapping(bytes32 => struct LiquidityBridgeContractV2.PegoutRecord)"
          },
          "t_struct(PegoutRecord)6983_storage": {
            "label": "struct LiquidityBridgeContractV2.PegoutRecord",
            "members": [
              {
                "label": "depositTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "completed",
                "type": "t_bool"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "00d5830f416690d00e4ac9da12989c5cb8f36a02dffbc779592a7fe979ad5c7e": {
      "address": "0x26cc222A1b857fac709CCe873CA144146B3D9e32",
      "txHash": "0x6ab555891939fcfd13cd282d6a5f58098aa05d7583ab0de5bd1e63fdd874db17",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "bridge",
            "type": "t_contract(Bridge)2338",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:100"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:101"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "collateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:102"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "pegoutCollateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:103"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "liquidityProviders",
            "type": "t_mapping(t_uint256,t_struct(LiquidityProvider)6996_storage)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:104"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "callRegistry",
            "type": "t_mapping(t_bytes32,t_struct(Registry)6978_storage)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:105"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "resignationBlockNum",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:106"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "minCollateral",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:108"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "minPegIn",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:109"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "rewardP",
            "type": "t_uint32",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:111"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "resignDelayInBlocks",
            "type": "t_uint32",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:112"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "dust",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:113"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "providerId",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:114"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "btcBlockTime",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:116"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "mainnet",
            "type": "t_bool",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:117"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "processedQuotes",
            "type": "t_mapping(t_bytes32,t_uint8)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:119"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "registeredPegoutQuotes",
            "type": "t_mapping(t_bytes32,t_struct(PegOutQuote)10186_storage)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:120"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "pegoutRegistry",
            "type": "t_mapping(t_bytes32,t_struct(PegoutRecord)6983_storage)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:121"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "productFeePercentage",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:123"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "daoFeeCollectorAddress",
            "type": "t_address",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:124"
          }
        ],
        "types": {
          "t_contract(Bridge)2338": {
            "label": "contract Bridge"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(LiquidityProvider)6996_storage)": {
            "label": "mapping(uint256 => struct LiquidityBridgeContractV2.LiquidityProvider)"
          },
          "t_struct(LiquidityProvider)6996_storage": {
            "label": "struct LiquidityBridgeContractV2.LiquidityProvider",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "provider",
                "type": "t_address"
              },
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "apiBaseUrl",
                "type": "t_string_storage"
              },
              {
                "label": "status",
                "type": "t_bool"
              },
              {
                "label": "providerType",
                "type": "t_string_storage"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(Registry)6978_storage)": {
            "label": "mapping(bytes32 => struct LiquidityBridgeContractV2.Registry)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(Registry)6978_storage": {
            "label": "struct LiquidityBridgeContractV2.Registry",
            "members": [
              {
                "label": "timestamp",
                "type": "t_uint32"
              },
              {
                "label": "success",
                "type": "t_bool"
              }
            ]
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_bytes32,t_uint8)": {
            "label": "mapping(bytes32 => uint8)"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_bytes32,t_struct(PegOutQuote)10186_storage)": {
            "label": "mapping(bytes32 => struct QuotesV2.PegOutQuote)"
          },
          "t_struct(PegOutQuote)10186_storage": {
            "label": "struct QuotesV2.PegOutQuote",
            "members": [
              {
                "label": "lbcAddress",
                "type": "t_address"
              },
              {
                "label": "lpRskAddress",
                "type": "t_address"
              },
              {
                "label": "btcRefundAddress",
                "type": "t_bytes_storage"
              },
              {
                "label": "rskRefundAddress",
                "type": "t_address"
              },
              {
                "label": "lpBtcAddress",
                "type": "t_bytes_storage"
              },
              {
                "label": "callFee",
                "type": "t_uint256"
              },
              {
                "label": "penaltyFee",
                "type": "t_uint256"
              },
              {
                "label": "nonce",
                "type": "t_int64"
              },
              {
                "label": "deposityAddress",
                "type": "t_bytes_storage"
              },
              {
                "label": "value",
                "type": "t_uint256"
              },
              {
                "label": "agreementTimestamp",
                "type": "t_uint32"
              },
              {
                "label": "depositDateLimit",
                "type": "t_uint32"
              },
              {
                "label": "depositConfirmations",
                "type": "t_uint16"
              },
              {
                "label": "transferConfirmations",
                "type": "t_uint16"
              },
              {
                "label": "transferTime",
                "type": "t_uint32"
              },
              {
                "label": "expireDate",
                "type": "t_uint32"
              },
              {
                "label": "expireBlock",
                "type": "t_uint32"
              },
              {
                "label": "productFeeAmount",
                "type": "t_uint256"
              }
            ]
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_int64": {
            "label": "int64"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_bytes32,t_struct(PegoutRecord)6983_storage)": {
            "label": "mapping(bytes32 => struct LiquidityBridgeContractV2.PegoutRecord)"
          },
          "t_struct(PegoutRecord)6983_storage": {
            "label": "struct LiquidityBridgeContractV2.PegoutRecord",
            "members": [
              {
                "label": "depositTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "completed",
                "type": "t_bool"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "6bc6c18b463e3742156f8eabaac29d351569a724fdf21c4b31eff492061b57dc": {
      "address": "0xdd343Ef491B9520BB5efFC2A7154B133893840Ea",
      "txHash": "0x95e933ab67993ce3a81e915b9f8337f64653fcc09fd9e806e409a34d90c2852c",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "bridge",
            "type": "t_contract(Bridge)3244",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:92"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:93"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "collateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:94"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "pegoutCollateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:95"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "liquidityProviders",
            "type": "t_mapping(t_uint256,t_struct(LiquidityProvider)7092_storage)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:96"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "callRegistry",
            "type": "t_mapping(t_bytes32,t_struct(Registry)7074_storage)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:97"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "resignationBlockNum",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:98"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "minCollateral",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:100"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "minPegIn",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:101"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "rewardP",
            "type": "t_uint32",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:103"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "resignDelayInBlocks",
            "type": "t_uint32",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:104"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "dust",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:105"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "providerId",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:106"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "btcBlockTime",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:108"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "mainnet",
            "type": "t_bool",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:109"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "processedQuotes",
            "type": "t_mapping(t_bytes32,t_uint8)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:111"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "registeredPegoutQuotes",
            "type": "t_mapping(t_bytes32,t_struct(PegOutQuote)10187_storage)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:112"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "pegoutRegistry",
            "type": "t_mapping(t_bytes32,t_struct(PegoutRecord)7079_storage)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:113"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "productFeePercentage",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:115"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "daoFeeCollectorAddress",
            "type": "t_address",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:116"
          }
        ],
        "types": {
          "t_contract(Bridge)3244": {
            "label": "contract Bridge"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(LiquidityProvider)7092_storage)": {
            "label": "mapping(uint256 => struct LiquidityBridgeContractV2.LiquidityProvider)"
          },
          "t_struct(LiquidityProvider)7092_storage": {
            "label": "struct LiquidityBridgeContractV2.LiquidityProvider",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "provider",
                "type": "t_address"
              },
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "apiBaseUrl",
                "type": "t_string_storage"
              },
              {
                "label": "status",
                "type": "t_bool"
              },
              {
                "label": "providerType",
                "type": "t_string_storage"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(Registry)7074_storage)": {
            "label": "mapping(bytes32 => struct LiquidityBridgeContractV2.Registry)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(Registry)7074_storage": {
            "label": "struct LiquidityBridgeContractV2.Registry",
            "members": [
              {
                "label": "timestamp",
                "type": "t_uint32"
              },
              {
                "label": "success",
                "type": "t_bool"
              }
            ]
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_bytes32,t_uint8)": {
            "label": "mapping(bytes32 => uint8)"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_bytes32,t_struct(PegOutQuote)10187_storage)": {
            "label": "mapping(bytes32 => struct QuotesV2.PegOutQuote)"
          },
          "t_struct(PegOutQuote)10187_storage": {
            "label": "struct QuotesV2.PegOutQuote",
            "members": [
              {
                "label": "lbcAddress",
                "type": "t_address"
              },
              {
                "label": "lpRskAddress",
                "type": "t_address"
              },
              {
                "label": "btcRefundAddress",
                "type": "t_bytes_storage"
              },
              {
                "label": "rskRefundAddress",
                "type": "t_address"
              },
              {
                "label": "lpBtcAddress",
                "type": "t_bytes_storage"
              },
              {
                "label": "callFee",
                "type": "t_uint256"
              },
              {
                "label": "penaltyFee",
                "type": "t_uint256"
              },
              {
                "label": "nonce",
                "type": "t_int64"
              },
              {
                "label": "deposityAddress",
                "type": "t_bytes_storage"
              },
              {
                "label": "value",
                "type": "t_uint256"
              },
              {
                "label": "agreementTimestamp",
                "type": "t_uint32"
              },
              {
                "label": "depositDateLimit",
                "type": "t_uint32"
              },
              {
                "label": "depositConfirmations",
                "type": "t_uint16"
              },
              {
                "label": "transferConfirmations",
                "type": "t_uint16"
              },
              {
                "label": "transferTime",
                "type": "t_uint32"
              },
              {
                "label": "expireDate",
                "type": "t_uint32"
              },
              {
                "label": "expireBlock",
                "type": "t_uint32"
              },
              {
                "label": "productFeeAmount",
                "type": "t_uint256"
              },
              {
                "label": "gasFee",
                "type": "t_uint256"
              }
            ]
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_int64": {
            "label": "int64"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_bytes32,t_struct(PegoutRecord)7079_storage)": {
            "label": "mapping(bytes32 => struct LiquidityBridgeContractV2.PegoutRecord)"
          },
          "t_struct(PegoutRecord)7079_storage": {
            "label": "struct LiquidityBridgeContractV2.PegoutRecord",
            "members": [
              {
                "label": "depositTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "completed",
                "type": "t_bool"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "f8f62f1ec9efc7ba291bd6f0ee0ef844d78d0b9b6dba0dd53427c7ca88562284": {
      "address": "0x0085d1e64d7255cd3d8ae4F2aDe10b46bf8c6327",
      "txHash": "0xf79faeb490165de708085c81c4d9df6db43e17af475a756bae7927f8e02f4c51",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "bridge",
            "type": "t_contract(Bridge)3244",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:92"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:93"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "collateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:94"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "pegoutCollateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:95"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "liquidityProviders",
            "type": "t_mapping(t_uint256,t_struct(LiquidityProvider)7092_storage)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:96"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "callRegistry",
            "type": "t_mapping(t_bytes32,t_struct(Registry)7074_storage)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:97"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "resignationBlockNum",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:98"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "minCollateral",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:100"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "minPegIn",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:101"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "rewardP",
            "type": "t_uint32",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:103"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "resignDelayInBlocks",
            "type": "t_uint32",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:104"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "dust",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:105"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "providerId",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:106"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "btcBlockTime",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:108"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "mainnet",
            "type": "t_bool",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:109"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "processedQuotes",
            "type": "t_mapping(t_bytes32,t_uint8)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:111"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "registeredPegoutQuotes",
            "type": "t_mapping(t_bytes32,t_struct(PegOutQuote)10187_storage)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:112"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "pegoutRegistry",
            "type": "t_mapping(t_bytes32,t_struct(PegoutRecord)7079_storage)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:113"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "productFeePercentage",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:115"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "daoFeeCollectorAddress",
            "type": "t_address",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:116"
          }
        ],
        "types": {
          "t_contract(Bridge)3244": {
            "label": "contract Bridge"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(LiquidityProvider)7092_storage)": {
            "label": "mapping(uint256 => struct LiquidityBridgeContractV2.LiquidityProvider)"
          },
          "t_struct(LiquidityProvider)7092_storage": {
            "label": "struct LiquidityBridgeContractV2.LiquidityProvider",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "provider",
                "type": "t_address"
              },
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "apiBaseUrl",
                "type": "t_string_storage"
              },
              {
                "label": "status",
                "type": "t_bool"
              },
              {
                "label": "providerType",
                "type": "t_string_storage"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(Registry)7074_storage)": {
            "label": "mapping(bytes32 => struct LiquidityBridgeContractV2.Registry)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(Registry)7074_storage": {
            "label": "struct LiquidityBridgeContractV2.Registry",
            "members": [
              {
                "label": "timestamp",
                "type": "t_uint32"
              },
              {
                "label": "success",
                "type": "t_bool"
              }
            ]
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_bytes32,t_uint8)": {
            "label": "mapping(bytes32 => uint8)"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_bytes32,t_struct(PegOutQuote)10187_storage)": {
            "label": "mapping(bytes32 => struct QuotesV2.PegOutQuote)"
          },
          "t_struct(PegOutQuote)10187_storage": {
            "label": "struct QuotesV2.PegOutQuote",
            "members": [
              {
                "label": "lbcAddress",
                "type": "t_address"
              },
              {
                "label": "lpRskAddress",
                "type": "t_address"
              },
              {
                "label": "btcRefundAddress",
                "type": "t_bytes_storage"
              },
              {
                "label": "rskRefundAddress",
                "type": "t_address"
              },
              {
                "label": "lpBtcAddress",
                "type": "t_bytes_storage"
              },
              {
                "label": "callFee",
                "type": "t_uint256"
              },
              {
                "label": "penaltyFee",
                "type": "t_uint256"
              },
              {
                "label": "nonce",
                "type": "t_int64"
              },
              {
                "label": "deposityAddress",
                "type": "t_bytes_storage"
              },
              {
                "label": "value",
                "type": "t_uint256"
              },
              {
                "label": "agreementTimestamp",
                "type": "t_uint32"
              },
              {
                "label": "depositDateLimit",
                "type": "t_uint32"
              },
              {
                "label": "depositConfirmations",
                "type": "t_uint16"
              },
              {
                "label": "transferConfirmations",
                "type": "t_uint16"
              },
              {
                "label": "transferTime",
                "type": "t_uint32"
              },
              {
                "label": "expireDate",
                "type": "t_uint32"
              },
              {
                "label": "expireBlock",
                "type": "t_uint32"
              },
              {
                "label": "productFeeAmount",
                "type": "t_uint256"
              },
              {
                "label": "gasFee",
                "type": "t_uint256"
              }
            ]
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_int64": {
            "label": "int64"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_bytes32,t_struct(PegoutRecord)7079_storage)": {
            "label": "mapping(bytes32 => struct LiquidityBridgeContractV2.PegoutRecord)"
          },
          "t_struct(PegoutRecord)7079_storage": {
            "label": "struct LiquidityBridgeContractV2.PegoutRecord",
            "members": [
              {
                "label": "depositTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "completed",
                "type": "t_bool"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "5f8d16007d06cb460d5d9f35efd903dca17132c79941d9ebd70b99c3b405b092": {
      "address": "0xf87F5dEEd6F527C62b718a509d65494dfFB8Dc6C",
      "txHash": "0x17018de742d304ef560f7a606ceb6c5335e3b47c683d3adde3f7b5f313d25107",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "bridge",
            "type": "t_contract(Bridge)3208",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:92"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:93"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "collateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:94"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "pegoutCollateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:95"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "liquidityProviders",
            "type": "t_mapping(t_uint256,t_struct(LiquidityProvider)7056_storage)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:96"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "callRegistry",
            "type": "t_mapping(t_bytes32,t_struct(Registry)7038_storage)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:97"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "resignationBlockNum",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:98"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "minCollateral",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:100"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "minPegIn",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:101"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "rewardP",
            "type": "t_uint32",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:103"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "resignDelayInBlocks",
            "type": "t_uint32",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:104"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "dust",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:105"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "providerId",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:106"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "btcBlockTime",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:108"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "mainnet",
            "type": "t_bool",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:109"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "processedQuotes",
            "type": "t_mapping(t_bytes32,t_uint8)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:111"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "registeredPegoutQuotes",
            "type": "t_mapping(t_bytes32,t_struct(PegOutQuote)10194_storage)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:112"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "pegoutRegistry",
            "type": "t_mapping(t_bytes32,t_struct(PegoutRecord)7043_storage)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:113"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "productFeePercentage",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:115"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "daoFeeCollectorAddress",
            "type": "t_address",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:116"
          }
        ],
        "types": {
          "t_contract(Bridge)3208": {
            "label": "contract Bridge"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(LiquidityProvider)7056_storage)": {
            "label": "mapping(uint256 => struct LiquidityBridgeContractV2.LiquidityProvider)"
          },
          "t_struct(LiquidityProvider)7056_storage": {
            "label": "struct LiquidityBridgeContractV2.LiquidityProvider",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "provider",
                "type": "t_address"
              },
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "apiBaseUrl",
                "type": "t_string_storage"
              },
              {
                "label": "status",
                "type": "t_bool"
              },
              {
                "label": "providerType",
                "type": "t_string_storage"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(Registry)7038_storage)": {
            "label": "mapping(bytes32 => struct LiquidityBridgeContractV2.Registry)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(Registry)7038_storage": {
            "label": "struct LiquidityBridgeContractV2.Registry",
            "members": [
              {
                "label": "timestamp",
                "type": "t_uint32"
              },
              {
                "label": "success",
                "type": "t_bool"
              }
            ]
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_bytes32,t_uint8)": {
            "label": "mapping(bytes32 => uint8)"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_bytes32,t_struct(PegOutQuote)10194_storage)": {
            "label": "mapping(bytes32 => struct QuotesV2.PegOutQuote)"
          },
          "t_struct(PegOutQuote)10194_storage": {
            "label": "struct QuotesV2.PegOutQuote",
            "members": [
              {
                "label": "lbcAddress",
                "type": "t_address"
              },
              {
                "label": "lpRskAddress",
                "type": "t_address"
              },
              {
                "label": "btcRefundAddress",
                "type": "t_bytes_storage"
              },
              {
                "label": "rskRefundAddress",
                "type": "t_address"
              },
              {
                "label": "lpBtcAddress",
                "type": "t_bytes_storage"
              },
              {
                "label": "callFee",
                "type": "t_uint256"
              },
              {
                "label": "penaltyFee",
                "type": "t_uint256"
              },
              {
                "label": "nonce",
                "type": "t_int64"
              },
              {
                "label": "deposityAddress",
                "type": "t_bytes_storage"
              },
              {
                "label": "value",
                "type": "t_uint256"
              },
              {
                "label": "agreementTimestamp",
                "type": "t_uint32"
              },
              {
                "label": "depositDateLimit",
                "type": "t_uint32"
              },
              {
                "label": "depositConfirmations",
                "type": "t_uint16"
              },
              {
                "label": "transferConfirmations",
                "type": "t_uint16"
              },
              {
                "label": "transferTime",
                "type": "t_uint32"
              },
              {
                "label": "expireDate",
                "type": "t_uint32"
              },
              {
                "label": "expireBlock",
                "type": "t_uint32"
              },
              {
                "label": "productFeeAmount",
                "type": "t_uint256"
              },
              {
                "label": "gasFee",
                "type": "t_uint256"
              }
            ]
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_int64": {
            "label": "int64"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_bytes32,t_struct(PegoutRecord)7043_storage)": {
            "label": "mapping(bytes32 => struct LiquidityBridgeContractV2.PegoutRecord)"
          },
          "t_struct(PegoutRecord)7043_storage": {
            "label": "struct LiquidityBridgeContractV2.PegoutRecord",
            "members": [
              {
                "label": "depositTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "completed",
                "type": "t_bool"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "27a4b58b4d14718b32c46a374599128fdb5544e85868edf6826c1644b9e41435": {
      "address": "0x1565fF278610933dD55e59B1Db4897425B126723",
      "txHash": "0x9c5b5914d29e6b65dc6f18a789911f058dc32f1b1bb4148244d8ce1f8a220dfa",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "bridge",
            "type": "t_contract(Bridge)3208",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:92"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:93"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "collateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:94"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "pegoutCollateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:95"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "liquidityProviders",
            "type": "t_mapping(t_uint256,t_struct(LiquidityProvider)7056_storage)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:96"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "callRegistry",
            "type": "t_mapping(t_bytes32,t_struct(Registry)7038_storage)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:97"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "resignationBlockNum",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:98"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "minCollateral",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:100"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "minPegIn",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:101"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "rewardP",
            "type": "t_uint32",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:103"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "resignDelayInBlocks",
            "type": "t_uint32",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:104"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "dust",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:105"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "providerId",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:106"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "btcBlockTime",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:108"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "mainnet",
            "type": "t_bool",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:109"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "processedQuotes",
            "type": "t_mapping(t_bytes32,t_uint8)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:111"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "registeredPegoutQuotes",
            "type": "t_mapping(t_bytes32,t_struct(PegOutQuote)10194_storage)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:112"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "pegoutRegistry",
            "type": "t_mapping(t_bytes32,t_struct(PegoutRecord)7043_storage)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:113"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "productFeePercentage",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:115"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "daoFeeCollectorAddress",
            "type": "t_address",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:116"
          }
        ],
        "types": {
          "t_contract(Bridge)3208": {
            "label": "contract Bridge"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(LiquidityProvider)7056_storage)": {
            "label": "mapping(uint256 => struct LiquidityBridgeContractV2.LiquidityProvider)"
          },
          "t_struct(LiquidityProvider)7056_storage": {
            "label": "struct LiquidityBridgeContractV2.LiquidityProvider",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "provider",
                "type": "t_address"
              },
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "apiBaseUrl",
                "type": "t_string_storage"
              },
              {
                "label": "status",
                "type": "t_bool"
              },
              {
                "label": "providerType",
                "type": "t_string_storage"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(Registry)7038_storage)": {
            "label": "mapping(bytes32 => struct LiquidityBridgeContractV2.Registry)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(Registry)7038_storage": {
            "label": "struct LiquidityBridgeContractV2.Registry",
            "members": [
              {
                "label": "timestamp",
                "type": "t_uint32"
              },
              {
                "label": "success",
                "type": "t_bool"
              }
            ]
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_bytes32,t_uint8)": {
            "label": "mapping(bytes32 => uint8)"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_bytes32,t_struct(PegOutQuote)10194_storage)": {
            "label": "mapping(bytes32 => struct QuotesV2.PegOutQuote)"
          },
          "t_struct(PegOutQuote)10194_storage": {
            "label": "struct QuotesV2.PegOutQuote",
            "members": [
              {
                "label": "lbcAddress",
                "type": "t_address"
              },
              {
                "label": "lpRskAddress",
                "type": "t_address"
              },
              {
                "label": "btcRefundAddress",
                "type": "t_bytes_storage"
              },
              {
                "label": "rskRefundAddress",
                "type": "t_address"
              },
              {
                "label": "lpBtcAddress",
                "type": "t_bytes_storage"
              },
              {
                "label": "callFee",
                "type": "t_uint256"
              },
              {
                "label": "penaltyFee",
                "type": "t_uint256"
              },
              {
                "label": "nonce",
                "type": "t_int64"
              },
              {
                "label": "deposityAddress",
                "type": "t_bytes_storage"
              },
              {
                "label": "value",
                "type": "t_uint256"
              },
              {
                "label": "agreementTimestamp",
                "type": "t_uint32"
              },
              {
                "label": "depositDateLimit",
                "type": "t_uint32"
              },
              {
                "label": "depositConfirmations",
                "type": "t_uint16"
              },
              {
                "label": "transferConfirmations",
                "type": "t_uint16"
              },
              {
                "label": "transferTime",
                "type": "t_uint32"
              },
              {
                "label": "expireDate",
                "type": "t_uint32"
              },
              {
                "label": "expireBlock",
                "type": "t_uint32"
              },
              {
                "label": "productFeeAmount",
                "type": "t_uint256"
              },
              {
                "label": "gasFee",
                "type": "t_uint256"
              }
            ]
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_int64": {
            "label": "int64"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_bytes32,t_struct(PegoutRecord)7043_storage)": {
            "label": "mapping(bytes32 => struct LiquidityBridgeContractV2.PegoutRecord)"
          },
          "t_struct(PegoutRecord)7043_storage": {
            "label": "struct LiquidityBridgeContractV2.PegoutRecord",
            "members": [
              {
                "label": "depositTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "completed",
                "type": "t_bool"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "247393654d293bc3ae1268a74a8a6fd5cad6e11db3078e0e21d631296fda1d4a": {
      "address": "0xe2B649Df2640F7154f217B016f8a1004F34a2549",
      "txHash": "0x0b8d109a2893accf8a626e9c05db7b9eaa7f8e11d873f01556b11cfda10f81a7",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "bridge",
            "type": "t_contract(Bridge)3208",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:92"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:93"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "collateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:94"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "pegoutCollateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:95"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "liquidityProviders",
            "type": "t_mapping(t_uint256,t_struct(LiquidityProvider)7056_storage)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:96"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "callRegistry",
            "type": "t_mapping(t_bytes32,t_struct(Registry)7038_storage)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:97"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "resignationBlockNum",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:98"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "minCollateral",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:100"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "minPegIn",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:101"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "rewardP",
            "type": "t_uint32",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:103"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "resignDelayInBlocks",
            "type": "t_uint32",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:104"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "dust",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:105"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "providerId",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:106"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "btcBlockTime",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:108"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "mainnet",
            "type": "t_bool",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:109"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "processedQuotes",
            "type": "t_mapping(t_bytes32,t_uint8)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:111"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "registeredPegoutQuotes",
            "type": "t_mapping(t_bytes32,t_struct(PegOutQuote)10194_storage)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:112"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "pegoutRegistry",
            "type": "t_mapping(t_bytes32,t_struct(PegoutRecord)7043_storage)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:113"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "productFeePercentage",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:115"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "daoFeeCollectorAddress",
            "type": "t_address",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:116"
          }
        ],
        "types": {
          "t_contract(Bridge)3208": {
            "label": "contract Bridge"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(LiquidityProvider)7056_storage)": {
            "label": "mapping(uint256 => struct LiquidityBridgeContractV2.LiquidityProvider)"
          },
          "t_struct(LiquidityProvider)7056_storage": {
            "label": "struct LiquidityBridgeContractV2.LiquidityProvider",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "provider",
                "type": "t_address"
              },
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "apiBaseUrl",
                "type": "t_string_storage"
              },
              {
                "label": "status",
                "type": "t_bool"
              },
              {
                "label": "providerType",
                "type": "t_string_storage"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(Registry)7038_storage)": {
            "label": "mapping(bytes32 => struct LiquidityBridgeContractV2.Registry)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(Registry)7038_storage": {
            "label": "struct LiquidityBridgeContractV2.Registry",
            "members": [
              {
                "label": "timestamp",
                "type": "t_uint32"
              },
              {
                "label": "success",
                "type": "t_bool"
              }
            ]
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_bytes32,t_uint8)": {
            "label": "mapping(bytes32 => uint8)"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_bytes32,t_struct(PegOutQuote)10194_storage)": {
            "label": "mapping(bytes32 => struct QuotesV2.PegOutQuote)"
          },
          "t_struct(PegOutQuote)10194_storage": {
            "label": "struct QuotesV2.PegOutQuote",
            "members": [
              {
                "label": "lbcAddress",
                "type": "t_address"
              },
              {
                "label": "lpRskAddress",
                "type": "t_address"
              },
              {
                "label": "btcRefundAddress",
                "type": "t_bytes_storage"
              },
              {
                "label": "rskRefundAddress",
                "type": "t_address"
              },
              {
                "label": "lpBtcAddress",
                "type": "t_bytes_storage"
              },
              {
                "label": "callFee",
                "type": "t_uint256"
              },
              {
                "label": "penaltyFee",
                "type": "t_uint256"
              },
              {
                "label": "nonce",
                "type": "t_int64"
              },
              {
                "label": "deposityAddress",
                "type": "t_bytes_storage"
              },
              {
                "label": "value",
                "type": "t_uint256"
              },
              {
                "label": "agreementTimestamp",
                "type": "t_uint32"
              },
              {
                "label": "depositDateLimit",
                "type": "t_uint32"
              },
              {
                "label": "depositConfirmations",
                "type": "t_uint16"
              },
              {
                "label": "transferConfirmations",
                "type": "t_uint16"
              },
              {
                "label": "transferTime",
                "type": "t_uint32"
              },
              {
                "label": "expireDate",
                "type": "t_uint32"
              },
              {
                "label": "expireBlock",
                "type": "t_uint32"
              },
              {
                "label": "productFeeAmount",
                "type": "t_uint256"
              },
              {
                "label": "gasFee",
                "type": "t_uint256"
              }
            ]
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_int64": {
            "label": "int64"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_bytes32,t_struct(PegoutRecord)7043_storage)": {
            "label": "mapping(bytes32 => struct LiquidityBridgeContractV2.PegoutRecord)"
          },
          "t_struct(PegoutRecord)7043_storage": {
            "label": "struct LiquidityBridgeContractV2.PegoutRecord",
            "members": [
              {
                "label": "depositTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "completed",
                "type": "t_bool"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "3dd224bf4dade6a28f5bc9580e95605dfe954e5935c2f4f6c6e43d845b365eb8": {
      "address": "0xE2F501320571eD2E4bF909677c99D8Ec0D1A9903",
      "txHash": "0x37c84989fee55dac03b0d3e38f64b567f9dfbf948035341d12ac6afc89d73099",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "bridge",
            "type": "t_contract(Bridge)3208",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:92"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:93"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "collateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:94"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "pegoutCollateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:95"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "liquidityProviders",
            "type": "t_mapping(t_uint256,t_struct(LiquidityProvider)7056_storage)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:96"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "callRegistry",
            "type": "t_mapping(t_bytes32,t_struct(Registry)7038_storage)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:97"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "resignationBlockNum",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:98"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "minCollateral",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:100"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "minPegIn",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:101"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "rewardP",
            "type": "t_uint32",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:103"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "resignDelayInBlocks",
            "type": "t_uint32",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:104"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "dust",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:105"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "providerId",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:106"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "btcBlockTime",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:108"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "mainnet",
            "type": "t_bool",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:109"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "processedQuotes",
            "type": "t_mapping(t_bytes32,t_uint8)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:111"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "registeredPegoutQuotes",
            "type": "t_mapping(t_bytes32,t_struct(PegOutQuote)10194_storage)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:112"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "pegoutRegistry",
            "type": "t_mapping(t_bytes32,t_struct(PegoutRecord)7043_storage)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:113"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "productFeePercentage",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:115"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "daoFeeCollectorAddress",
            "type": "t_address",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:116"
          }
        ],
        "types": {
          "t_contract(Bridge)3208": {
            "label": "contract Bridge"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(LiquidityProvider)7056_storage)": {
            "label": "mapping(uint256 => struct LiquidityBridgeContractV2.LiquidityProvider)"
          },
          "t_struct(LiquidityProvider)7056_storage": {
            "label": "struct LiquidityBridgeContractV2.LiquidityProvider",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "provider",
                "type": "t_address"
              },
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "apiBaseUrl",
                "type": "t_string_storage"
              },
              {
                "label": "status",
                "type": "t_bool"
              },
              {
                "label": "providerType",
                "type": "t_string_storage"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(Registry)7038_storage)": {
            "label": "mapping(bytes32 => struct LiquidityBridgeContractV2.Registry)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(Registry)7038_storage": {
            "label": "struct LiquidityBridgeContractV2.Registry",
            "members": [
              {
                "label": "timestamp",
                "type": "t_uint32"
              },
              {
                "label": "success",
                "type": "t_bool"
              }
            ]
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_bytes32,t_uint8)": {
            "label": "mapping(bytes32 => uint8)"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_bytes32,t_struct(PegOutQuote)10194_storage)": {
            "label": "mapping(bytes32 => struct QuotesV2.PegOutQuote)"
          },
          "t_struct(PegOutQuote)10194_storage": {
            "label": "struct QuotesV2.PegOutQuote",
            "members": [
              {
                "label": "lbcAddress",
                "type": "t_address"
              },
              {
                "label": "lpRskAddress",
                "type": "t_address"
              },
              {
                "label": "btcRefundAddress",
                "type": "t_bytes_storage"
              },
              {
                "label": "rskRefundAddress",
                "type": "t_address"
              },
              {
                "label": "lpBtcAddress",
                "type": "t_bytes_storage"
              },
              {
                "label": "callFee",
                "type": "t_uint256"
              },
              {
                "label": "penaltyFee",
                "type": "t_uint256"
              },
              {
                "label": "nonce",
                "type": "t_int64"
              },
              {
                "label": "deposityAddress",
                "type": "t_bytes_storage"
              },
              {
                "label": "value",
                "type": "t_uint256"
              },
              {
                "label": "agreementTimestamp",
                "type": "t_uint32"
              },
              {
                "label": "depositDateLimit",
                "type": "t_uint32"
              },
              {
                "label": "depositConfirmations",
                "type": "t_uint16"
              },
              {
                "label": "transferConfirmations",
                "type": "t_uint16"
              },
              {
                "label": "transferTime",
                "type": "t_uint32"
              },
              {
                "label": "expireDate",
                "type": "t_uint32"
              },
              {
                "label": "expireBlock",
                "type": "t_uint32"
              },
              {
                "label": "productFeeAmount",
                "type": "t_uint256"
              },
              {
                "label": "gasFee",
                "type": "t_uint256"
              }
            ]
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_int64": {
            "label": "int64"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_bytes32,t_struct(PegoutRecord)7043_storage)": {
            "label": "mapping(bytes32 => struct LiquidityBridgeContractV2.PegoutRecord)"
          },
          "t_struct(PegoutRecord)7043_storage": {
            "label": "struct LiquidityBridgeContractV2.PegoutRecord",
            "members": [
              {
                "label": "depositTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "completed",
                "type": "t_bool"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "de90dd3d12b4653b2a7cdd2ca09d55124d2c4317496e6096974aebc7ebff0693": {
      "address": "0x90c50e5F697C7099D12B51E841Ce173A45Ee0EC1",
      "txHash": "0xa9e38a973bb5dabae1808816bc17a6cc23e6026a3be217918ce981e51d0c9457",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "contract": "LiquidityBridgeContract",
            "label": "bridge",
            "type": "t_contract(Bridge)3208",
            "src": "../project:/contracts/LiquidityBridgeContract.sol:99"
          },
          {
            "contract": "LiquidityBridgeContract",
            "label": "balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidityBridgeContract.sol:100"
          },
          {
            "contract": "LiquidityBridgeContract",
            "label": "collateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidityBridgeContract.sol:101"
          },
          {
            "contract": "LiquidityBridgeContract",
            "label": "pegoutCollateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidityBridgeContract.sol:102"
          },
          {
            "contract": "LiquidityBridgeContract",
            "label": "liquidityProviders",
            "type": "t_mapping(t_uint256,t_struct(LiquidityProvider)4169_storage)",
            "src": "../project:/contracts/LiquidityBridgeContract.sol:103"
          },
          {
            "contract": "LiquidityBridgeContract",
            "label": "callRegistry",
            "type": "t_mapping(t_bytes32,t_struct(Registry)4151_storage)",
            "src": "../project:/contracts/LiquidityBridgeContract.sol:104"
          },
          {
            "contract": "LiquidityBridgeContract",
            "label": "resignationBlockNum",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidityBridgeContract.sol:105"
          },
          {
            "contract": "LiquidityBridgeContract",
            "label": "minCollateral",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContract.sol:107"
          },
          {
            "contract": "LiquidityBridgeContract",
            "label": "minPegIn",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContract.sol:108"
          },
          {
            "contract": "LiquidityBridgeContract",
            "label": "rewardP",
            "type": "t_uint32",
            "src": "../project:/contracts/LiquidityBridgeContract.sol:110"
          },
          {
            "contract": "LiquidityBridgeContract",
            "label": "resignDelayInBlocks",
            "type": "t_uint32",
            "src": "../project:/contracts/LiquidityBridgeContract.sol:111"
          },
          {
            "contract": "LiquidityBridgeContract",
            "label": "dust",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContract.sol:112"
          },
          {
            "contract": "LiquidityBridgeContract",
            "label": "providerId",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContract.sol:113"
          },
          {
            "contract": "LiquidityBridgeContract",
            "label": "btcBlockTime",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContract.sol:115"
          },
          {
            "contract": "LiquidityBridgeContract",
            "label": "mainnet",
            "type": "t_bool",
            "src": "../project:/contracts/LiquidityBridgeContract.sol:116"
          },
          {
            "contract": "LiquidityBridgeContract",
            "label": "processedQuotes",
            "type": "t_mapping(t_bytes32,t_uint8)",
            "src": "../project:/contracts/LiquidityBridgeContract.sol:118"
          },
          {
            "contract": "LiquidityBridgeContract",
            "label": "registeredPegoutQuotes",
            "type": "t_mapping(t_bytes32,t_struct(PegOutQuote)9919_storage)",
            "src": "../project:/contracts/LiquidityBridgeContract.sol:119"
          },
          {
            "contract": "LiquidityBridgeContract",
            "label": "pegoutRegistry",
            "type": "t_mapping(t_bytes32,t_struct(PegoutRecord)4156_storage)",
            "src": "../project:/contracts/LiquidityBridgeContract.sol:120"
          }
        ],
        "types": {
          "t_contract(Bridge)3208": {
            "label": "contract Bridge"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(LiquidityProvider)4169_storage)": {
            "label": "mapping(uint256 => struct LiquidityBridgeContract.LiquidityProvider)"
          },
          "t_struct(LiquidityProvider)4169_storage": {
            "label": "struct LiquidityBridgeContract.LiquidityProvider",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "provider",
                "type": "t_address"
              },
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "apiBaseUrl",
                "type": "t_string_storage"
              },
              {
                "label": "status",
                "type": "t_bool"
              },
              {
                "label": "providerType",
                "type": "t_string_storage"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(Registry)4151_storage)": {
            "label": "mapping(bytes32 => struct LiquidityBridgeContract.Registry)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(Registry)4151_storage": {
            "label": "struct LiquidityBridgeContract.Registry",
            "members": [
              {
                "label": "timestamp",
                "type": "t_uint32"
              },
              {
                "label": "success",
                "type": "t_bool"
              }
            ]
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_bytes32,t_uint8)": {
            "label": "mapping(bytes32 => uint8)"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_bytes32,t_struct(PegOutQuote)9919_storage)": {
            "label": "mapping(bytes32 => struct Quotes.PegOutQuote)"
          },
          "t_struct(PegOutQuote)9919_storage": {
            "label": "struct Quotes.PegOutQuote",
            "members": [
              {
                "label": "lbcAddress",
                "type": "t_address"
              },
              {
                "label": "lpRskAddress",
                "type": "t_address"
              },
              {
                "label": "btcRefundAddress",
                "type": "t_bytes_storage"
              },
              {
                "label": "rskRefundAddress",
                "type": "t_address"
              },
              {
                "label": "lpBtcAddress",
                "type": "t_bytes_storage"
              },
              {
                "label": "callFee",
                "type": "t_uint256"
              },
              {
                "label": "penaltyFee",
                "type": "t_uint256"
              },
              {
                "label": "nonce",
                "type": "t_int64"
              },
              {
                "label": "deposityAddress",
                "type": "t_bytes_storage"
              },
              {
                "label": "value",
                "type": "t_uint256"
              },
              {
                "label": "agreementTimestamp",
                "type": "t_uint32"
              },
              {
                "label": "depositDateLimit",
                "type": "t_uint32"
              },
              {
                "label": "depositConfirmations",
                "type": "t_uint16"
              },
              {
                "label": "transferConfirmations",
                "type": "t_uint16"
              },
              {
                "label": "transferTime",
                "type": "t_uint32"
              },
              {
                "label": "expireDate",
                "type": "t_uint32"
              },
              {
                "label": "expireBlock",
                "type": "t_uint32"
              }
            ]
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_int64": {
            "label": "int64"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_bytes32,t_struct(PegoutRecord)4156_storage)": {
            "label": "mapping(bytes32 => struct LiquidityBridgeContract.PegoutRecord)"
          },
          "t_struct(PegoutRecord)4156_storage": {
            "label": "struct LiquidityBridgeContract.PegoutRecord",
            "members": [
              {
                "label": "depositTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "completed",
                "type": "t_bool"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "a6306b14fac13762855c6923e2f46ced9d2052b61c6997e8d6dc956801cd1180": {
      "address": "0x89539dC869C819Fc57EbCbEaE4A0A6E464E731D9",
      "txHash": "0x4dd58e6be860b01a7e88dcc7092f3003d55a91b0f3bdcc84cfe91b55559821b2",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "bridge",
            "type": "t_contract(Bridge)3208",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:92"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:93"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "collateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:94"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "pegoutCollateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:95"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "liquidityProviders",
            "type": "t_mapping(t_uint256,t_struct(LiquidityProvider)7056_storage)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:96"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "callRegistry",
            "type": "t_mapping(t_bytes32,t_struct(Registry)7038_storage)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:97"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "resignationBlockNum",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:98"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "minCollateral",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:100"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "minPegIn",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:101"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "rewardP",
            "type": "t_uint32",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:103"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "resignDelayInBlocks",
            "type": "t_uint32",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:104"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "dust",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:105"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "providerId",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:106"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "btcBlockTime",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:108"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "mainnet",
            "type": "t_bool",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:109"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "processedQuotes",
            "type": "t_mapping(t_bytes32,t_uint8)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:111"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "registeredPegoutQuotes",
            "type": "t_mapping(t_bytes32,t_struct(PegOutQuote)10194_storage)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:112"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "pegoutRegistry",
            "type": "t_mapping(t_bytes32,t_struct(PegoutRecord)7043_storage)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:113"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "productFeePercentage",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:115"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "daoFeeCollectorAddress",
            "type": "t_address",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:116"
          }
        ],
        "types": {
          "t_contract(Bridge)3208": {
            "label": "contract Bridge"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(LiquidityProvider)7056_storage)": {
            "label": "mapping(uint256 => struct LiquidityBridgeContractV2.LiquidityProvider)"
          },
          "t_struct(LiquidityProvider)7056_storage": {
            "label": "struct LiquidityBridgeContractV2.LiquidityProvider",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "provider",
                "type": "t_address"
              },
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "apiBaseUrl",
                "type": "t_string_storage"
              },
              {
                "label": "status",
                "type": "t_bool"
              },
              {
                "label": "providerType",
                "type": "t_string_storage"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(Registry)7038_storage)": {
            "label": "mapping(bytes32 => struct LiquidityBridgeContractV2.Registry)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(Registry)7038_storage": {
            "label": "struct LiquidityBridgeContractV2.Registry",
            "members": [
              {
                "label": "timestamp",
                "type": "t_uint32"
              },
              {
                "label": "success",
                "type": "t_bool"
              }
            ]
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_bytes32,t_uint8)": {
            "label": "mapping(bytes32 => uint8)"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_bytes32,t_struct(PegOutQuote)10194_storage)": {
            "label": "mapping(bytes32 => struct QuotesV2.PegOutQuote)"
          },
          "t_struct(PegOutQuote)10194_storage": {
            "label": "struct QuotesV2.PegOutQuote",
            "members": [
              {
                "label": "lbcAddress",
                "type": "t_address"
              },
              {
                "label": "lpRskAddress",
                "type": "t_address"
              },
              {
                "label": "btcRefundAddress",
                "type": "t_bytes_storage"
              },
              {
                "label": "rskRefundAddress",
                "type": "t_address"
              },
              {
                "label": "lpBtcAddress",
                "type": "t_bytes_storage"
              },
              {
                "label": "callFee",
                "type": "t_uint256"
              },
              {
                "label": "penaltyFee",
                "type": "t_uint256"
              },
              {
                "label": "nonce",
                "type": "t_int64"
              },
              {
                "label": "deposityAddress",
                "type": "t_bytes_storage"
              },
              {
                "label": "value",
                "type": "t_uint256"
              },
              {
                "label": "agreementTimestamp",
                "type": "t_uint32"
              },
              {
                "label": "depositDateLimit",
                "type": "t_uint32"
              },
              {
                "label": "depositConfirmations",
                "type": "t_uint16"
              },
              {
                "label": "transferConfirmations",
                "type": "t_uint16"
              },
              {
                "label": "transferTime",
                "type": "t_uint32"
              },
              {
                "label": "expireDate",
                "type": "t_uint32"
              },
              {
                "label": "expireBlock",
                "type": "t_uint32"
              },
              {
                "label": "productFeeAmount",
                "type": "t_uint256"
              },
              {
                "label": "gasFee",
                "type": "t_uint256"
              }
            ]
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_int64": {
            "label": "int64"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_bytes32,t_struct(PegoutRecord)7043_storage)": {
            "label": "mapping(bytes32 => struct LiquidityBridgeContractV2.PegoutRecord)"
          },
          "t_struct(PegoutRecord)7043_storage": {
            "label": "struct LiquidityBridgeContractV2.PegoutRecord",
            "members": [
              {
                "label": "depositTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "completed",
                "type": "t_bool"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "5ffe2a9b5a2f22507cc01d0ed0d7f87f619d0131ab9fcab14c15e300ed69c22d": {
      "address": "0x564325059094B17E1726077011cFFbEC97ba7D47",
      "txHash": "0x935ba2ed2999e796d09f2d3c3ccd37c40009662c2dd373d17d7e6e209d601bb5",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "bridge",
            "type": "t_contract(Bridge)3208",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:92"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:93"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "collateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:94"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "pegoutCollateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:95"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "liquidityProviders",
            "type": "t_mapping(t_uint256,t_struct(LiquidityProvider)7056_storage)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:96"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "callRegistry",
            "type": "t_mapping(t_bytes32,t_struct(Registry)7038_storage)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:97"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "resignationBlockNum",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:98"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "minCollateral",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:100"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "minPegIn",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:101"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "rewardP",
            "type": "t_uint32",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:103"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "resignDelayInBlocks",
            "type": "t_uint32",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:104"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "dust",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:105"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "providerId",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:106"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "btcBlockTime",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:108"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "mainnet",
            "type": "t_bool",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:109"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "processedQuotes",
            "type": "t_mapping(t_bytes32,t_uint8)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:111"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "registeredPegoutQuotes",
            "type": "t_mapping(t_bytes32,t_struct(PegOutQuote)10194_storage)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:112"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "pegoutRegistry",
            "type": "t_mapping(t_bytes32,t_struct(PegoutRecord)7043_storage)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:113"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "productFeePercentage",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:115"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "daoFeeCollectorAddress",
            "type": "t_address",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:116"
          }
        ],
        "types": {
          "t_contract(Bridge)3208": {
            "label": "contract Bridge"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(LiquidityProvider)7056_storage)": {
            "label": "mapping(uint256 => struct LiquidityBridgeContractV2.LiquidityProvider)"
          },
          "t_struct(LiquidityProvider)7056_storage": {
            "label": "struct LiquidityBridgeContractV2.LiquidityProvider",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "provider",
                "type": "t_address"
              },
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "apiBaseUrl",
                "type": "t_string_storage"
              },
              {
                "label": "status",
                "type": "t_bool"
              },
              {
                "label": "providerType",
                "type": "t_string_storage"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(Registry)7038_storage)": {
            "label": "mapping(bytes32 => struct LiquidityBridgeContractV2.Registry)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(Registry)7038_storage": {
            "label": "struct LiquidityBridgeContractV2.Registry",
            "members": [
              {
                "label": "timestamp",
                "type": "t_uint32"
              },
              {
                "label": "success",
                "type": "t_bool"
              }
            ]
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_bytes32,t_uint8)": {
            "label": "mapping(bytes32 => uint8)"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_bytes32,t_struct(PegOutQuote)10194_storage)": {
            "label": "mapping(bytes32 => struct QuotesV2.PegOutQuote)"
          },
          "t_struct(PegOutQuote)10194_storage": {
            "label": "struct QuotesV2.PegOutQuote",
            "members": [
              {
                "label": "lbcAddress",
                "type": "t_address"
              },
              {
                "label": "lpRskAddress",
                "type": "t_address"
              },
              {
                "label": "btcRefundAddress",
                "type": "t_bytes_storage"
              },
              {
                "label": "rskRefundAddress",
                "type": "t_address"
              },
              {
                "label": "lpBtcAddress",
                "type": "t_bytes_storage"
              },
              {
                "label": "callFee",
                "type": "t_uint256"
              },
              {
                "label": "penaltyFee",
                "type": "t_uint256"
              },
              {
                "label": "nonce",
                "type": "t_int64"
              },
              {
                "label": "deposityAddress",
                "type": "t_bytes_storage"
              },
              {
                "label": "value",
                "type": "t_uint256"
              },
              {
                "label": "agreementTimestamp",
                "type": "t_uint32"
              },
              {
                "label": "depositDateLimit",
                "type": "t_uint32"
              },
              {
                "label": "depositConfirmations",
                "type": "t_uint16"
              },
              {
                "label": "transferConfirmations",
                "type": "t_uint16"
              },
              {
                "label": "transferTime",
                "type": "t_uint32"
              },
              {
                "label": "expireDate",
                "type": "t_uint32"
              },
              {
                "label": "expireBlock",
                "type": "t_uint32"
              },
              {
                "label": "productFeeAmount",
                "type": "t_uint256"
              },
              {
                "label": "gasFee",
                "type": "t_uint256"
              }
            ]
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_int64": {
            "label": "int64"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_bytes32,t_struct(PegoutRecord)7043_storage)": {
            "label": "mapping(bytes32 => struct LiquidityBridgeContractV2.PegoutRecord)"
          },
          "t_struct(PegoutRecord)7043_storage": {
            "label": "struct LiquidityBridgeContractV2.PegoutRecord",
            "members": [
              {
                "label": "depositTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "completed",
                "type": "t_bool"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "8b4f1f176622aeaac1341bc4d3b6ee12f20999a4702cee3743f0f7965b209945": {
      "address": "0x3F4922c8008F99D07937e19513f7C0157BA96B84",
      "txHash": "0x43aff19b439cac0fa025d0312b183f58f8b7eb584be4cb54bb65fe681c5e3e27",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "bridge",
            "type": "t_contract(Bridge)3208",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:92"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:93"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "collateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:94"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "pegoutCollateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:95"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "liquidityProviders",
            "type": "t_mapping(t_uint256,t_struct(LiquidityProvider)7056_storage)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:96"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "callRegistry",
            "type": "t_mapping(t_bytes32,t_struct(Registry)7038_storage)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:97"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "resignationBlockNum",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:98"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "minCollateral",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:100"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "minPegIn",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:101"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "rewardP",
            "type": "t_uint32",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:103"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "resignDelayInBlocks",
            "type": "t_uint32",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:104"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "dust",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:105"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "providerId",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:106"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "btcBlockTime",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:108"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "mainnet",
            "type": "t_bool",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:109"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "processedQuotes",
            "type": "t_mapping(t_bytes32,t_uint8)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:111"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "registeredPegoutQuotes",
            "type": "t_mapping(t_bytes32,t_struct(PegOutQuote)10194_storage)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:112"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "pegoutRegistry",
            "type": "t_mapping(t_bytes32,t_struct(PegoutRecord)7043_storage)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:113"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "productFeePercentage",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:115"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "daoFeeCollectorAddress",
            "type": "t_address",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:116"
          }
        ],
        "types": {
          "t_contract(Bridge)3208": {
            "label": "contract Bridge"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(LiquidityProvider)7056_storage)": {
            "label": "mapping(uint256 => struct LiquidityBridgeContractV2.LiquidityProvider)"
          },
          "t_struct(LiquidityProvider)7056_storage": {
            "label": "struct LiquidityBridgeContractV2.LiquidityProvider",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "provider",
                "type": "t_address"
              },
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "apiBaseUrl",
                "type": "t_string_storage"
              },
              {
                "label": "status",
                "type": "t_bool"
              },
              {
                "label": "providerType",
                "type": "t_string_storage"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(Registry)7038_storage)": {
            "label": "mapping(bytes32 => struct LiquidityBridgeContractV2.Registry)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(Registry)7038_storage": {
            "label": "struct LiquidityBridgeContractV2.Registry",
            "members": [
              {
                "label": "timestamp",
                "type": "t_uint32"
              },
              {
                "label": "success",
                "type": "t_bool"
              }
            ]
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_bytes32,t_uint8)": {
            "label": "mapping(bytes32 => uint8)"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_bytes32,t_struct(PegOutQuote)10194_storage)": {
            "label": "mapping(bytes32 => struct QuotesV2.PegOutQuote)"
          },
          "t_struct(PegOutQuote)10194_storage": {
            "label": "struct QuotesV2.PegOutQuote",
            "members": [
              {
                "label": "lbcAddress",
                "type": "t_address"
              },
              {
                "label": "lpRskAddress",
                "type": "t_address"
              },
              {
                "label": "btcRefundAddress",
                "type": "t_bytes_storage"
              },
              {
                "label": "rskRefundAddress",
                "type": "t_address"
              },
              {
                "label": "lpBtcAddress",
                "type": "t_bytes_storage"
              },
              {
                "label": "callFee",
                "type": "t_uint256"
              },
              {
                "label": "penaltyFee",
                "type": "t_uint256"
              },
              {
                "label": "nonce",
                "type": "t_int64"
              },
              {
                "label": "deposityAddress",
                "type": "t_bytes_storage"
              },
              {
                "label": "value",
                "type": "t_uint256"
              },
              {
                "label": "agreementTimestamp",
                "type": "t_uint32"
              },
              {
                "label": "depositDateLimit",
                "type": "t_uint32"
              },
              {
                "label": "depositConfirmations",
                "type": "t_uint16"
              },
              {
                "label": "transferConfirmations",
                "type": "t_uint16"
              },
              {
                "label": "transferTime",
                "type": "t_uint32"
              },
              {
                "label": "expireDate",
                "type": "t_uint32"
              },
              {
                "label": "expireBlock",
                "type": "t_uint32"
              },
              {
                "label": "productFeeAmount",
                "type": "t_uint256"
              },
              {
                "label": "gasFee",
                "type": "t_uint256"
              }
            ]
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_int64": {
            "label": "int64"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_bytes32,t_struct(PegoutRecord)7043_storage)": {
            "label": "mapping(bytes32 => struct LiquidityBridgeContractV2.PegoutRecord)"
          },
          "t_struct(PegoutRecord)7043_storage": {
            "label": "struct LiquidityBridgeContractV2.PegoutRecord",
            "members": [
              {
                "label": "depositTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "completed",
                "type": "t_bool"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "96bf787691c8d0c60953d0ff1f876c77b78b54c1a4236d0bdb250d9583e1e515": {
      "address": "0x7C86686CF7bb15A10474D4B7fF90eaF74d121b4F",
      "txHash": "0x16401e777ea882d5b15d94707d940ac40100e5be2d89b8c063e4bc148521ac34",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "bridge",
            "type": "t_contract(Bridge)3208",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:92"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:93"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "collateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:94"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "pegoutCollateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:95"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "liquidityProviders",
            "type": "t_mapping(t_uint256,t_struct(LiquidityProvider)7056_storage)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:96"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "callRegistry",
            "type": "t_mapping(t_bytes32,t_struct(Registry)7038_storage)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:97"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "resignationBlockNum",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:98"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "minCollateral",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:100"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "minPegIn",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:101"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "rewardP",
            "type": "t_uint32",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:103"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "resignDelayInBlocks",
            "type": "t_uint32",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:104"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "dust",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:105"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "providerId",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:106"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "btcBlockTime",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:108"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "mainnet",
            "type": "t_bool",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:109"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "processedQuotes",
            "type": "t_mapping(t_bytes32,t_uint8)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:111"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "registeredPegoutQuotes",
            "type": "t_mapping(t_bytes32,t_struct(PegOutQuote)10194_storage)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:112"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "pegoutRegistry",
            "type": "t_mapping(t_bytes32,t_struct(PegoutRecord)7043_storage)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:113"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "productFeePercentage",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:115"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "daoFeeCollectorAddress",
            "type": "t_address",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:116"
          }
        ],
        "types": {
          "t_contract(Bridge)3208": {
            "label": "contract Bridge"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(LiquidityProvider)7056_storage)": {
            "label": "mapping(uint256 => struct LiquidityBridgeContractV2.LiquidityProvider)"
          },
          "t_struct(LiquidityProvider)7056_storage": {
            "label": "struct LiquidityBridgeContractV2.LiquidityProvider",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "provider",
                "type": "t_address"
              },
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "apiBaseUrl",
                "type": "t_string_storage"
              },
              {
                "label": "status",
                "type": "t_bool"
              },
              {
                "label": "providerType",
                "type": "t_string_storage"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(Registry)7038_storage)": {
            "label": "mapping(bytes32 => struct LiquidityBridgeContractV2.Registry)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(Registry)7038_storage": {
            "label": "struct LiquidityBridgeContractV2.Registry",
            "members": [
              {
                "label": "timestamp",
                "type": "t_uint32"
              },
              {
                "label": "success",
                "type": "t_bool"
              }
            ]
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_bytes32,t_uint8)": {
            "label": "mapping(bytes32 => uint8)"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_bytes32,t_struct(PegOutQuote)10194_storage)": {
            "label": "mapping(bytes32 => struct QuotesV2.PegOutQuote)"
          },
          "t_struct(PegOutQuote)10194_storage": {
            "label": "struct QuotesV2.PegOutQuote",
            "members": [
              {
                "label": "lbcAddress",
                "type": "t_address"
              },
              {
                "label": "lpRskAddress",
                "type": "t_address"
              },
              {
                "label": "btcRefundAddress",
                "type": "t_bytes_storage"
              },
              {
                "label": "rskRefundAddress",
                "type": "t_address"
              },
              {
                "label": "lpBtcAddress",
                "type": "t_bytes_storage"
              },
              {
                "label": "callFee",
                "type": "t_uint256"
              },
              {
                "label": "penaltyFee",
                "type": "t_uint256"
              },
              {
                "label": "nonce",
                "type": "t_int64"
              },
              {
                "label": "deposityAddress",
                "type": "t_bytes_storage"
              },
              {
                "label": "value",
                "type": "t_uint256"
              },
              {
                "label": "agreementTimestamp",
                "type": "t_uint32"
              },
              {
                "label": "depositDateLimit",
                "type": "t_uint32"
              },
              {
                "label": "depositConfirmations",
                "type": "t_uint16"
              },
              {
                "label": "transferConfirmations",
                "type": "t_uint16"
              },
              {
                "label": "transferTime",
                "type": "t_uint32"
              },
              {
                "label": "expireDate",
                "type": "t_uint32"
              },
              {
                "label": "expireBlock",
                "type": "t_uint32"
              },
              {
                "label": "productFeeAmount",
                "type": "t_uint256"
              },
              {
                "label": "gasFee",
                "type": "t_uint256"
              }
            ]
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_int64": {
            "label": "int64"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_bytes32,t_struct(PegoutRecord)7043_storage)": {
            "label": "mapping(bytes32 => struct LiquidityBridgeContractV2.PegoutRecord)"
          },
          "t_struct(PegoutRecord)7043_storage": {
            "label": "struct LiquidityBridgeContractV2.PegoutRecord",
            "members": [
              {
                "label": "depositTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "completed",
                "type": "t_bool"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "285be4463945dfa4ef8c533dcfba8e4083b4ba972bd1d4aaae1f04bbea8c7987": {
      "address": "0x7a1EA7CD2d13C92AF0FCF0C68e98f200FD1F135B",
      "txHash": "0x26bff230e1cf8df66321e6b7e4659a604ff94b28996f089fcee0d947ed87f8ed",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "bridge",
            "type": "t_contract(Bridge)3208",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:92"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:93"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "collateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:94"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "pegoutCollateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:95"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "liquidityProviders",
            "type": "t_mapping(t_uint256,t_struct(LiquidityProvider)7056_storage)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:96"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "callRegistry",
            "type": "t_mapping(t_bytes32,t_struct(Registry)7038_storage)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:97"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "resignationBlockNum",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:98"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "minCollateral",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:100"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "minPegIn",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:101"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "rewardP",
            "type": "t_uint32",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:103"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "resignDelayInBlocks",
            "type": "t_uint32",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:104"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "dust",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:105"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "providerId",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:106"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "btcBlockTime",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:108"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "mainnet",
            "type": "t_bool",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:109"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "processedQuotes",
            "type": "t_mapping(t_bytes32,t_uint8)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:111"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "registeredPegoutQuotes",
            "type": "t_mapping(t_bytes32,t_struct(PegOutQuote)10194_storage)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:112"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "pegoutRegistry",
            "type": "t_mapping(t_bytes32,t_struct(PegoutRecord)7043_storage)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:113"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "productFeePercentage",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:115"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "daoFeeCollectorAddress",
            "type": "t_address",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:116"
          }
        ],
        "types": {
          "t_contract(Bridge)3208": {
            "label": "contract Bridge"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(LiquidityProvider)7056_storage)": {
            "label": "mapping(uint256 => struct LiquidityBridgeContractV2.LiquidityProvider)"
          },
          "t_struct(LiquidityProvider)7056_storage": {
            "label": "struct LiquidityBridgeContractV2.LiquidityProvider",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "provider",
                "type": "t_address"
              },
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "apiBaseUrl",
                "type": "t_string_storage"
              },
              {
                "label": "status",
                "type": "t_bool"
              },
              {
                "label": "providerType",
                "type": "t_string_storage"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(Registry)7038_storage)": {
            "label": "mapping(bytes32 => struct LiquidityBridgeContractV2.Registry)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(Registry)7038_storage": {
            "label": "struct LiquidityBridgeContractV2.Registry",
            "members": [
              {
                "label": "timestamp",
                "type": "t_uint32"
              },
              {
                "label": "success",
                "type": "t_bool"
              }
            ]
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_bytes32,t_uint8)": {
            "label": "mapping(bytes32 => uint8)"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_bytes32,t_struct(PegOutQuote)10194_storage)": {
            "label": "mapping(bytes32 => struct QuotesV2.PegOutQuote)"
          },
          "t_struct(PegOutQuote)10194_storage": {
            "label": "struct QuotesV2.PegOutQuote",
            "members": [
              {
                "label": "lbcAddress",
                "type": "t_address"
              },
              {
                "label": "lpRskAddress",
                "type": "t_address"
              },
              {
                "label": "btcRefundAddress",
                "type": "t_bytes_storage"
              },
              {
                "label": "rskRefundAddress",
                "type": "t_address"
              },
              {
                "label": "lpBtcAddress",
                "type": "t_bytes_storage"
              },
              {
                "label": "callFee",
                "type": "t_uint256"
              },
              {
                "label": "penaltyFee",
                "type": "t_uint256"
              },
              {
                "label": "nonce",
                "type": "t_int64"
              },
              {
                "label": "deposityAddress",
                "type": "t_bytes_storage"
              },
              {
                "label": "value",
                "type": "t_uint256"
              },
              {
                "label": "agreementTimestamp",
                "type": "t_uint32"
              },
              {
                "label": "depositDateLimit",
                "type": "t_uint32"
              },
              {
                "label": "depositConfirmations",
                "type": "t_uint16"
              },
              {
                "label": "transferConfirmations",
                "type": "t_uint16"
              },
              {
                "label": "transferTime",
                "type": "t_uint32"
              },
              {
                "label": "expireDate",
                "type": "t_uint32"
              },
              {
                "label": "expireBlock",
                "type": "t_uint32"
              },
              {
                "label": "productFeeAmount",
                "type": "t_uint256"
              },
              {
                "label": "gasFee",
                "type": "t_uint256"
              }
            ]
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_int64": {
            "label": "int64"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_bytes32,t_struct(PegoutRecord)7043_storage)": {
            "label": "mapping(bytes32 => struct LiquidityBridgeContractV2.PegoutRecord)"
          },
          "t_struct(PegoutRecord)7043_storage": {
            "label": "struct LiquidityBridgeContractV2.PegoutRecord",
            "members": [
              {
                "label": "depositTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "completed",
                "type": "t_bool"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "89f0e64476f46344be846c71abd0a3ff4f07eac1d57af095ae85c7796dd4c2e8": {
      "address": "0x9f398843A1376899216531e1e71ce3E338ec2a1C",
      "txHash": "0xb9d0ec5fb34f12fa24f783d849e56dc4e65a30fc69cca48fbae4b5d88dcdef88",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "contract": "LiquidityBridgeContract",
            "label": "bridge",
            "type": "t_contract(Bridge)3208",
            "src": "../project:/contracts/LiquidityBridgeContract.sol:99"
          },
          {
            "contract": "LiquidityBridgeContract",
            "label": "balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidityBridgeContract.sol:100"
          },
          {
            "contract": "LiquidityBridgeContract",
            "label": "collateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidityBridgeContract.sol:101"
          },
          {
            "contract": "LiquidityBridgeContract",
            "label": "pegoutCollateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidityBridgeContract.sol:102"
          },
          {
            "contract": "LiquidityBridgeContract",
            "label": "liquidityProviders",
            "type": "t_mapping(t_uint256,t_struct(LiquidityProvider)4169_storage)",
            "src": "../project:/contracts/LiquidityBridgeContract.sol:103"
          },
          {
            "contract": "LiquidityBridgeContract",
            "label": "callRegistry",
            "type": "t_mapping(t_bytes32,t_struct(Registry)4151_storage)",
            "src": "../project:/contracts/LiquidityBridgeContract.sol:104"
          },
          {
            "contract": "LiquidityBridgeContract",
            "label": "resignationBlockNum",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidityBridgeContract.sol:105"
          },
          {
            "contract": "LiquidityBridgeContract",
            "label": "minCollateral",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContract.sol:107"
          },
          {
            "contract": "LiquidityBridgeContract",
            "label": "minPegIn",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContract.sol:108"
          },
          {
            "contract": "LiquidityBridgeContract",
            "label": "rewardP",
            "type": "t_uint32",
            "src": "../project:/contracts/LiquidityBridgeContract.sol:110"
          },
          {
            "contract": "LiquidityBridgeContract",
            "label": "resignDelayInBlocks",
            "type": "t_uint32",
            "src": "../project:/contracts/LiquidityBridgeContract.sol:111"
          },
          {
            "contract": "LiquidityBridgeContract",
            "label": "dust",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContract.sol:112"
          },
          {
            "contract": "LiquidityBridgeContract",
            "label": "providerId",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContract.sol:113"
          },
          {
            "contract": "LiquidityBridgeContract",
            "label": "btcBlockTime",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContract.sol:115"
          },
          {
            "contract": "LiquidityBridgeContract",
            "label": "mainnet",
            "type": "t_bool",
            "src": "../project:/contracts/LiquidityBridgeContract.sol:116"
          },
          {
            "contract": "LiquidityBridgeContract",
            "label": "processedQuotes",
            "type": "t_mapping(t_bytes32,t_uint8)",
            "src": "../project:/contracts/LiquidityBridgeContract.sol:118"
          },
          {
            "contract": "LiquidityBridgeContract",
            "label": "registeredPegoutQuotes",
            "type": "t_mapping(t_bytes32,t_struct(PegOutQuote)9980_storage)",
            "src": "../project:/contracts/LiquidityBridgeContract.sol:119"
          },
          {
            "contract": "LiquidityBridgeContract",
            "label": "pegoutRegistry",
            "type": "t_mapping(t_bytes32,t_struct(PegoutRecord)4156_storage)",
            "src": "../project:/contracts/LiquidityBridgeContract.sol:120"
          }
        ],
        "types": {
          "t_contract(Bridge)3208": {
            "label": "contract Bridge"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(LiquidityProvider)4169_storage)": {
            "label": "mapping(uint256 => struct LiquidityBridgeContract.LiquidityProvider)"
          },
          "t_struct(LiquidityProvider)4169_storage": {
            "label": "struct LiquidityBridgeContract.LiquidityProvider",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "provider",
                "type": "t_address"
              },
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "apiBaseUrl",
                "type": "t_string_storage"
              },
              {
                "label": "status",
                "type": "t_bool"
              },
              {
                "label": "providerType",
                "type": "t_string_storage"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(Registry)4151_storage)": {
            "label": "mapping(bytes32 => struct LiquidityBridgeContract.Registry)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(Registry)4151_storage": {
            "label": "struct LiquidityBridgeContract.Registry",
            "members": [
              {
                "label": "timestamp",
                "type": "t_uint32"
              },
              {
                "label": "success",
                "type": "t_bool"
              }
            ]
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_bytes32,t_uint8)": {
            "label": "mapping(bytes32 => uint8)"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_bytes32,t_struct(PegOutQuote)9980_storage)": {
            "label": "mapping(bytes32 => struct Quotes.PegOutQuote)"
          },
          "t_struct(PegOutQuote)9980_storage": {
            "label": "struct Quotes.PegOutQuote",
            "members": [
              {
                "label": "lbcAddress",
                "type": "t_address"
              },
              {
                "label": "lpRskAddress",
                "type": "t_address"
              },
              {
                "label": "btcRefundAddress",
                "type": "t_bytes_storage"
              },
              {
                "label": "rskRefundAddress",
                "type": "t_address"
              },
              {
                "label": "lpBtcAddress",
                "type": "t_bytes_storage"
              },
              {
                "label": "callFee",
                "type": "t_uint256"
              },
              {
                "label": "penaltyFee",
                "type": "t_uint256"
              },
              {
                "label": "nonce",
                "type": "t_int64"
              },
              {
                "label": "deposityAddress",
                "type": "t_bytes_storage"
              },
              {
                "label": "value",
                "type": "t_uint256"
              },
              {
                "label": "agreementTimestamp",
                "type": "t_uint32"
              },
              {
                "label": "depositDateLimit",
                "type": "t_uint32"
              },
              {
                "label": "depositConfirmations",
                "type": "t_uint16"
              },
              {
                "label": "transferConfirmations",
                "type": "t_uint16"
              },
              {
                "label": "transferTime",
                "type": "t_uint32"
              },
              {
                "label": "expireDate",
                "type": "t_uint32"
              },
              {
                "label": "expireBlock",
                "type": "t_uint32"
              }
            ]
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_int64": {
            "label": "int64"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_bytes32,t_struct(PegoutRecord)4156_storage)": {
            "label": "mapping(bytes32 => struct LiquidityBridgeContract.PegoutRecord)"
          },
          "t_struct(PegoutRecord)4156_storage": {
            "label": "struct LiquidityBridgeContract.PegoutRecord",
            "members": [
              {
                "label": "depositTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "completed",
                "type": "t_bool"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "9591253d48db795989e61ab902a12e00143bd048ec072451311fd8d3e3019d25": {
      "address": "0x4099b370E6Eb1A9173b91294e0bEed5184E1Cc02",
      "txHash": "0x482d1ebc58fccb3173c2df59ff25bbbaacacdc37f8e5bd5f767007a7c86469b0",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "bridge",
            "type": "t_contract(Bridge)3208",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:93"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:94"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "collateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:95"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "pegoutCollateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:96"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "liquidityProviders",
            "type": "t_mapping(t_uint256,t_struct(LiquidityProvider)7056_storage)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:97"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "callRegistry",
            "type": "t_mapping(t_bytes32,t_struct(Registry)7038_storage)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:98"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "resignationBlockNum",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:99"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "minCollateral",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:101"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "minPegIn",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:102"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "rewardP",
            "type": "t_uint32",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:104"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "resignDelayInBlocks",
            "type": "t_uint32",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:105"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "dust",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:106"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "providerId",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:107"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "btcBlockTime",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:109"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "mainnet",
            "type": "t_bool",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:110"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "processedQuotes",
            "type": "t_mapping(t_bytes32,t_uint8)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:112"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "registeredPegoutQuotes",
            "type": "t_mapping(t_bytes32,t_struct(PegOutQuote)10255_storage)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:113"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "pegoutRegistry",
            "type": "t_mapping(t_bytes32,t_struct(PegoutRecord)7043_storage)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:114"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "productFeePercentage",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:116"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "daoFeeCollectorAddress",
            "type": "t_address",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:117"
          }
        ],
        "types": {
          "t_contract(Bridge)3208": {
            "label": "contract Bridge"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(LiquidityProvider)7056_storage)": {
            "label": "mapping(uint256 => struct LiquidityBridgeContractV2.LiquidityProvider)"
          },
          "t_struct(LiquidityProvider)7056_storage": {
            "label": "struct LiquidityBridgeContractV2.LiquidityProvider",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "provider",
                "type": "t_address"
              },
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "apiBaseUrl",
                "type": "t_string_storage"
              },
              {
                "label": "status",
                "type": "t_bool"
              },
              {
                "label": "providerType",
                "type": "t_string_storage"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(Registry)7038_storage)": {
            "label": "mapping(bytes32 => struct LiquidityBridgeContractV2.Registry)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(Registry)7038_storage": {
            "label": "struct LiquidityBridgeContractV2.Registry",
            "members": [
              {
                "label": "timestamp",
                "type": "t_uint32"
              },
              {
                "label": "success",
                "type": "t_bool"
              }
            ]
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_bytes32,t_uint8)": {
            "label": "mapping(bytes32 => uint8)"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_bytes32,t_struct(PegOutQuote)10255_storage)": {
            "label": "mapping(bytes32 => struct QuotesV2.PegOutQuote)"
          },
          "t_struct(PegOutQuote)10255_storage": {
            "label": "struct QuotesV2.PegOutQuote",
            "members": [
              {
                "label": "lbcAddress",
                "type": "t_address"
              },
              {
                "label": "lpRskAddress",
                "type": "t_address"
              },
              {
                "label": "btcRefundAddress",
                "type": "t_bytes_storage"
              },
              {
                "label": "rskRefundAddress",
                "type": "t_address"
              },
              {
                "label": "lpBtcAddress",
                "type": "t_bytes_storage"
              },
              {
                "label": "callFee",
                "type": "t_uint256"
              },
              {
                "label": "penaltyFee",
                "type": "t_uint256"
              },
              {
                "label": "nonce",
                "type": "t_int64"
              },
              {
                "label": "deposityAddress",
                "type": "t_bytes_storage"
              },
              {
                "label": "value",
                "type": "t_uint256"
              },
              {
                "label": "agreementTimestamp",
                "type": "t_uint32"
              },
              {
                "label": "depositDateLimit",
                "type": "t_uint32"
              },
              {
                "label": "depositConfirmations",
                "type": "t_uint16"
              },
              {
                "label": "transferConfirmations",
                "type": "t_uint16"
              },
              {
                "label": "transferTime",
                "type": "t_uint32"
              },
              {
                "label": "expireDate",
                "type": "t_uint32"
              },
              {
                "label": "expireBlock",
                "type": "t_uint32"
              },
              {
                "label": "productFeeAmount",
                "type": "t_uint256"
              },
              {
                "label": "gasFee",
                "type": "t_uint256"
              }
            ]
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_int64": {
            "label": "int64"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_bytes32,t_struct(PegoutRecord)7043_storage)": {
            "label": "mapping(bytes32 => struct LiquidityBridgeContractV2.PegoutRecord)"
          },
          "t_struct(PegoutRecord)7043_storage": {
            "label": "struct LiquidityBridgeContractV2.PegoutRecord",
            "members": [
              {
                "label": "depositTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "completed",
                "type": "t_bool"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "4142daf338f9b3bfca62febf82e2efc4c0f2f2858da0d21e5a1687fde767d876": {
      "address": "0x70Bd0de9908f1E2C5DEFAAC5232f62786709E121",
      "txHash": "0xac7b8c55cacf6d607b4637e39796c9fb352c2a1447f55e82977b840462ab3703",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "bridge",
            "type": "t_contract(Bridge)3208",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:93"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:94"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "collateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:95"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "pegoutCollateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:96"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "liquidityProviders",
            "type": "t_mapping(t_uint256,t_struct(LiquidityProvider)7056_storage)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:97"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "callRegistry",
            "type": "t_mapping(t_bytes32,t_struct(Registry)7038_storage)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:98"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "resignationBlockNum",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:99"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "minCollateral",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:101"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "minPegIn",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:102"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "rewardP",
            "type": "t_uint32",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:104"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "resignDelayInBlocks",
            "type": "t_uint32",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:105"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "dust",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:106"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "providerId",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:107"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "btcBlockTime",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:109"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "mainnet",
            "type": "t_bool",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:110"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "processedQuotes",
            "type": "t_mapping(t_bytes32,t_uint8)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:112"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "registeredPegoutQuotes",
            "type": "t_mapping(t_bytes32,t_struct(PegOutQuote)10255_storage)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:113"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "pegoutRegistry",
            "type": "t_mapping(t_bytes32,t_struct(PegoutRecord)7043_storage)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:114"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "productFeePercentage",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:116"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "daoFeeCollectorAddress",
            "type": "t_address",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:117"
          }
        ],
        "types": {
          "t_contract(Bridge)3208": {
            "label": "contract Bridge"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(LiquidityProvider)7056_storage)": {
            "label": "mapping(uint256 => struct LiquidityBridgeContractV2.LiquidityProvider)"
          },
          "t_struct(LiquidityProvider)7056_storage": {
            "label": "struct LiquidityBridgeContractV2.LiquidityProvider",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "provider",
                "type": "t_address"
              },
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "apiBaseUrl",
                "type": "t_string_storage"
              },
              {
                "label": "status",
                "type": "t_bool"
              },
              {
                "label": "providerType",
                "type": "t_string_storage"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(Registry)7038_storage)": {
            "label": "mapping(bytes32 => struct LiquidityBridgeContractV2.Registry)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(Registry)7038_storage": {
            "label": "struct LiquidityBridgeContractV2.Registry",
            "members": [
              {
                "label": "timestamp",
                "type": "t_uint32"
              },
              {
                "label": "success",
                "type": "t_bool"
              }
            ]
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_bytes32,t_uint8)": {
            "label": "mapping(bytes32 => uint8)"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_bytes32,t_struct(PegOutQuote)10255_storage)": {
            "label": "mapping(bytes32 => struct QuotesV2.PegOutQuote)"
          },
          "t_struct(PegOutQuote)10255_storage": {
            "label": "struct QuotesV2.PegOutQuote",
            "members": [
              {
                "label": "lbcAddress",
                "type": "t_address"
              },
              {
                "label": "lpRskAddress",
                "type": "t_address"
              },
              {
                "label": "btcRefundAddress",
                "type": "t_bytes_storage"
              },
              {
                "label": "rskRefundAddress",
                "type": "t_address"
              },
              {
                "label": "lpBtcAddress",
                "type": "t_bytes_storage"
              },
              {
                "label": "callFee",
                "type": "t_uint256"
              },
              {
                "label": "penaltyFee",
                "type": "t_uint256"
              },
              {
                "label": "nonce",
                "type": "t_int64"
              },
              {
                "label": "deposityAddress",
                "type": "t_bytes_storage"
              },
              {
                "label": "value",
                "type": "t_uint256"
              },
              {
                "label": "agreementTimestamp",
                "type": "t_uint32"
              },
              {
                "label": "depositDateLimit",
                "type": "t_uint32"
              },
              {
                "label": "depositConfirmations",
                "type": "t_uint16"
              },
              {
                "label": "transferConfirmations",
                "type": "t_uint16"
              },
              {
                "label": "transferTime",
                "type": "t_uint32"
              },
              {
                "label": "expireDate",
                "type": "t_uint32"
              },
              {
                "label": "expireBlock",
                "type": "t_uint32"
              },
              {
                "label": "productFeeAmount",
                "type": "t_uint256"
              },
              {
                "label": "gasFee",
                "type": "t_uint256"
              }
            ]
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_int64": {
            "label": "int64"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_bytes32,t_struct(PegoutRecord)7043_storage)": {
            "label": "mapping(bytes32 => struct LiquidityBridgeContractV2.PegoutRecord)"
          },
          "t_struct(PegoutRecord)7043_storage": {
            "label": "struct LiquidityBridgeContractV2.PegoutRecord",
            "members": [
              {
                "label": "depositTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "completed",
                "type": "t_bool"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "b0227705ebe8eb932fb713c54dd9f38185a5d92e1ab487a34a724b5110ed9b13": {
      "address": "0x0c6B2d4ef06B91b7664390a797e83CD38341961D",
      "txHash": "0x989caa8bb4fa2b436e47cd3ca634ab3c6b465d7e34210a7bcf0483124a3272b1",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "bridge",
            "type": "t_contract(Bridge)3338",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:92"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:93"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "collateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:94"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "pegoutCollateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:95"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "liquidityProviders",
            "type": "t_mapping(t_uint256,t_struct(LiquidityProvider)7186_storage)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:96"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "callRegistry",
            "type": "t_mapping(t_bytes32,t_struct(Registry)7168_storage)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:97"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "resignationBlockNum",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:98"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "minCollateral",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:100"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "minPegIn",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:101"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "rewardP",
            "type": "t_uint32",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:103"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "resignDelayInBlocks",
            "type": "t_uint32",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:104"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "dust",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:105"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "providerId",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:106"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "btcBlockTime",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:108"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "mainnet",
            "type": "t_bool",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:109"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "processedQuotes",
            "type": "t_mapping(t_bytes32,t_uint8)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:111"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "registeredPegoutQuotes",
            "type": "t_mapping(t_bytes32,t_struct(PegOutQuote)10324_storage)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:112"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "pegoutRegistry",
            "type": "t_mapping(t_bytes32,t_struct(PegoutRecord)7173_storage)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:113"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "productFeePercentage",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:115"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "daoFeeCollectorAddress",
            "type": "t_address",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:116"
          }
        ],
        "types": {
          "t_contract(Bridge)3338": {
            "label": "contract Bridge"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(LiquidityProvider)7186_storage)": {
            "label": "mapping(uint256 => struct LiquidityBridgeContractV2.LiquidityProvider)"
          },
          "t_struct(LiquidityProvider)7186_storage": {
            "label": "struct LiquidityBridgeContractV2.LiquidityProvider",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "provider",
                "type": "t_address"
              },
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "apiBaseUrl",
                "type": "t_string_storage"
              },
              {
                "label": "status",
                "type": "t_bool"
              },
              {
                "label": "providerType",
                "type": "t_string_storage"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(Registry)7168_storage)": {
            "label": "mapping(bytes32 => struct LiquidityBridgeContractV2.Registry)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(Registry)7168_storage": {
            "label": "struct LiquidityBridgeContractV2.Registry",
            "members": [
              {
                "label": "timestamp",
                "type": "t_uint32"
              },
              {
                "label": "success",
                "type": "t_bool"
              }
            ]
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_bytes32,t_uint8)": {
            "label": "mapping(bytes32 => uint8)"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_bytes32,t_struct(PegOutQuote)10324_storage)": {
            "label": "mapping(bytes32 => struct QuotesV2.PegOutQuote)"
          },
          "t_struct(PegOutQuote)10324_storage": {
            "label": "struct QuotesV2.PegOutQuote",
            "members": [
              {
                "label": "lbcAddress",
                "type": "t_address"
              },
              {
                "label": "lpRskAddress",
                "type": "t_address"
              },
              {
                "label": "btcRefundAddress",
                "type": "t_bytes_storage"
              },
              {
                "label": "rskRefundAddress",
                "type": "t_address"
              },
              {
                "label": "lpBtcAddress",
                "type": "t_bytes_storage"
              },
              {
                "label": "callFee",
                "type": "t_uint256"
              },
              {
                "label": "penaltyFee",
                "type": "t_uint256"
              },
              {
                "label": "nonce",
                "type": "t_int64"
              },
              {
                "label": "deposityAddress",
                "type": "t_bytes_storage"
              },
              {
                "label": "value",
                "type": "t_uint256"
              },
              {
                "label": "agreementTimestamp",
                "type": "t_uint32"
              },
              {
                "label": "depositDateLimit",
                "type": "t_uint32"
              },
              {
                "label": "depositConfirmations",
                "type": "t_uint16"
              },
              {
                "label": "transferConfirmations",
                "type": "t_uint16"
              },
              {
                "label": "transferTime",
                "type": "t_uint32"
              },
              {
                "label": "expireDate",
                "type": "t_uint32"
              },
              {
                "label": "expireBlock",
                "type": "t_uint32"
              },
              {
                "label": "productFeeAmount",
                "type": "t_uint256"
              },
              {
                "label": "gasFee",
                "type": "t_uint256"
              }
            ]
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_int64": {
            "label": "int64"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_bytes32,t_struct(PegoutRecord)7173_storage)": {
            "label": "mapping(bytes32 => struct LiquidityBridgeContractV2.PegoutRecord)"
          },
          "t_struct(PegoutRecord)7173_storage": {
            "label": "struct LiquidityBridgeContractV2.PegoutRecord",
            "members": [
              {
                "label": "depositTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "completed",
                "type": "t_bool"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "1bce0613851c857d32f24be1f5d48a1873802cf8d7a3da13a15957e931a53348": {
      "address": "0xbC4Cf48cb8D153d4cBf3fBaA0A5cE9F0AB04f259",
      "txHash": "0xbc90d93c0b9c5011d0fd46c14efd64e827798a2d0a8435d113a2240b26fb70f6",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "bridge",
            "type": "t_contract(Bridge)3652",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:92"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:93"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "collateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:94"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "pegoutCollateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:95"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "liquidityProviders",
            "type": "t_mapping(t_uint256,t_struct(LiquidityProvider)7500_storage)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:96"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "callRegistry",
            "type": "t_mapping(t_bytes32,t_struct(Registry)7482_storage)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:97"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "resignationBlockNum",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:98"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "minCollateral",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:100"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "minPegIn",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:101"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "rewardP",
            "type": "t_uint32",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:103"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "resignDelayInBlocks",
            "type": "t_uint32",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:104"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "dust",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:105"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "providerId",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:106"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "btcBlockTime",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:108"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "mainnet",
            "type": "t_bool",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:109"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "processedQuotes",
            "type": "t_mapping(t_bytes32,t_uint8)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:111"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "registeredPegoutQuotes",
            "type": "t_mapping(t_bytes32,t_struct(PegOutQuote)10638_storage)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:112"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "pegoutRegistry",
            "type": "t_mapping(t_bytes32,t_struct(PegoutRecord)7487_storage)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:113"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "productFeePercentage",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:115"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "daoFeeCollectorAddress",
            "type": "t_address",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:116"
          }
        ],
        "types": {
          "t_contract(Bridge)3652": {
            "label": "contract Bridge"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(LiquidityProvider)7500_storage)": {
            "label": "mapping(uint256 => struct LiquidityBridgeContractV2.LiquidityProvider)"
          },
          "t_struct(LiquidityProvider)7500_storage": {
            "label": "struct LiquidityBridgeContractV2.LiquidityProvider",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "provider",
                "type": "t_address"
              },
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "apiBaseUrl",
                "type": "t_string_storage"
              },
              {
                "label": "status",
                "type": "t_bool"
              },
              {
                "label": "providerType",
                "type": "t_string_storage"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(Registry)7482_storage)": {
            "label": "mapping(bytes32 => struct LiquidityBridgeContractV2.Registry)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(Registry)7482_storage": {
            "label": "struct LiquidityBridgeContractV2.Registry",
            "members": [
              {
                "label": "timestamp",
                "type": "t_uint32"
              },
              {
                "label": "success",
                "type": "t_bool"
              }
            ]
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_bytes32,t_uint8)": {
            "label": "mapping(bytes32 => uint8)"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_bytes32,t_struct(PegOutQuote)10638_storage)": {
            "label": "mapping(bytes32 => struct QuotesV2.PegOutQuote)"
          },
          "t_struct(PegOutQuote)10638_storage": {
            "label": "struct QuotesV2.PegOutQuote",
            "members": [
              {
                "label": "lbcAddress",
                "type": "t_address"
              },
              {
                "label": "lpRskAddress",
                "type": "t_address"
              },
              {
                "label": "btcRefundAddress",
                "type": "t_bytes_storage"
              },
              {
                "label": "rskRefundAddress",
                "type": "t_address"
              },
              {
                "label": "lpBtcAddress",
                "type": "t_bytes_storage"
              },
              {
                "label": "callFee",
                "type": "t_uint256"
              },
              {
                "label": "penaltyFee",
                "type": "t_uint256"
              },
              {
                "label": "nonce",
                "type": "t_int64"
              },
              {
                "label": "deposityAddress",
                "type": "t_bytes_storage"
              },
              {
                "label": "value",
                "type": "t_uint256"
              },
              {
                "label": "agreementTimestamp",
                "type": "t_uint32"
              },
              {
                "label": "depositDateLimit",
                "type": "t_uint32"
              },
              {
                "label": "depositConfirmations",
                "type": "t_uint16"
              },
              {
                "label": "transferConfirmations",
                "type": "t_uint16"
              },
              {
                "label": "transferTime",
                "type": "t_uint32"
              },
              {
                "label": "expireDate",
                "type": "t_uint32"
              },
              {
                "label": "expireBlock",
                "type": "t_uint32"
              },
              {
                "label": "productFeeAmount",
                "type": "t_uint256"
              },
              {
                "label": "gasFee",
                "type": "t_uint256"
              }
            ]
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_int64": {
            "label": "int64"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_bytes32,t_struct(PegoutRecord)7487_storage)": {
            "label": "mapping(bytes32 => struct LiquidityBridgeContractV2.PegoutRecord)"
          },
          "t_struct(PegoutRecord)7487_storage": {
            "label": "struct LiquidityBridgeContractV2.PegoutRecord",
            "members": [
              {
                "label": "depositTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "completed",
                "type": "t_bool"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        },
        "namespaces": {}
      }
    },
    "6e9d058a3c1dca61b5bfd0883e6e996badc1067bdd787f46ce917d02edf42fa9": {
      "address": "0xDb2726b0D95C501b021E1c05283c11e77d628e7b",
      "txHash": "0x9b941a6f79e1a19a577a7e0c25d0a73dfd08e6f1e16c8a4c10f85bb81d2ed4fb",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "bridge",
            "type": "t_contract(Bridge)3652",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:92"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:93"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "collateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:94"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "pegoutCollateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:95"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "liquidityProviders",
            "type": "t_mapping(t_uint256,t_struct(LiquidityProvider)7500_storage)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:96"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "callRegistry",
            "type": "t_mapping(t_bytes32,t_struct(Registry)7482_storage)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:97"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "resignationBlockNum",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:98"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "minCollateral",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:100"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "minPegIn",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:101"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "rewardP",
            "type": "t_uint32",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:103"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "resignDelayInBlocks",
            "type": "t_uint32",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:104"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "dust",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:105"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "providerId",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:106"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "btcBlockTime",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:108"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "mainnet",
            "type": "t_bool",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:109"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "processedQuotes",
            "type": "t_mapping(t_bytes32,t_uint8)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:111"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "registeredPegoutQuotes",
            "type": "t_mapping(t_bytes32,t_struct(PegOutQuote)10638_storage)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:112"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "pegoutRegistry",
            "type": "t_mapping(t_bytes32,t_struct(PegoutRecord)7487_storage)",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:113"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "productFeePercentage",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:115"
          },
          {
            "contract": "LiquidityBridgeContractV2",
            "label": "daoFeeCollectorAddress",
            "type": "t_address",
            "src": "../project:/contracts/LiquidityBridgeContractV2.sol:116"
          }
        ],
        "types": {
          "t_contract(Bridge)3652": {
            "label": "contract Bridge"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(LiquidityProvider)7500_storage)": {
            "label": "mapping(uint256 => struct LiquidityBridgeContractV2.LiquidityProvider)"
          },
          "t_struct(LiquidityProvider)7500_storage": {
            "label": "struct LiquidityBridgeContractV2.LiquidityProvider",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "provider",
                "type": "t_address"
              },
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "apiBaseUrl",
                "type": "t_string_storage"
              },
              {
                "label": "status",
                "type": "t_bool"
              },
              {
                "label": "providerType",
                "type": "t_string_storage"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(Registry)7482_storage)": {
            "label": "mapping(bytes32 => struct LiquidityBridgeContractV2.Registry)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(Registry)7482_storage": {
            "label": "struct LiquidityBridgeContractV2.Registry",
            "members": [
              {
                "label": "timestamp",
                "type": "t_uint32"
              },
              {
                "label": "success",
                "type": "t_bool"
              }
            ]
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_bytes32,t_uint8)": {
            "label": "mapping(bytes32 => uint8)"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_bytes32,t_struct(PegOutQuote)10638_storage)": {
            "label": "mapping(bytes32 => struct QuotesV2.PegOutQuote)"
          },
          "t_struct(PegOutQuote)10638_storage": {
            "label": "struct QuotesV2.PegOutQuote",
            "members": [
              {
                "label": "lbcAddress",
                "type": "t_address"
              },
              {
                "label": "lpRskAddress",
                "type": "t_address"
              },
              {
                "label": "btcRefundAddress",
                "type": "t_bytes_storage"
              },
              {
                "label": "rskRefundAddress",
                "type": "t_address"
              },
              {
                "label": "lpBtcAddress",
                "type": "t_bytes_storage"
              },
              {
                "label": "callFee",
                "type": "t_uint256"
              },
              {
                "label": "penaltyFee",
                "type": "t_uint256"
              },
              {
                "label": "nonce",
                "type": "t_int64"
              },
              {
                "label": "deposityAddress",
                "type": "t_bytes_storage"
              },
              {
                "label": "value",
                "type": "t_uint256"
              },
              {
                "label": "agreementTimestamp",
                "type": "t_uint32"
              },
              {
                "label": "depositDateLimit",
                "type": "t_uint32"
              },
              {
                "label": "depositConfirmations",
                "type": "t_uint16"
              },
              {
                "label": "transferConfirmations",
                "type": "t_uint16"
              },
              {
                "label": "transferTime",
                "type": "t_uint32"
              },
              {
                "label": "expireDate",
                "type": "t_uint32"
              },
              {
                "label": "expireBlock",
                "type": "t_uint32"
              },
              {
                "label": "productFeeAmount",
                "type": "t_uint256"
              },
              {
                "label": "gasFee",
                "type": "t_uint256"
              }
            ]
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_int64": {
            "label": "int64"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_bytes32,t_struct(PegoutRecord)7487_storage)": {
            "label": "mapping(bytes32 => struct LiquidityBridgeContractV2.PegoutRecord)"
          },
          "t_struct(PegoutRecord)7487_storage": {
            "label": "struct LiquidityBridgeContractV2.PegoutRecord",
            "members": [
              {
                "label": "depositTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "completed",
                "type": "t_bool"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        },
        "namespaces": {}
      }
    }
  }
}
