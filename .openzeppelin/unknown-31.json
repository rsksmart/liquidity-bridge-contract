{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xb77900eaC31c3E5CE26432807d5efFE9Ac06455f",
    "txHash": "0x820ece21f6e73508041ac5c816d2d6cc65da196092680288f4464b5f0d13995d"
  },
  "proxies": [
    {
      "address": "0x2A4C1373A52D65943b9043062052534F7724c356",
      "txHash": "0x420730553de36e6fa322abe5d3dd73b108206d99a35869513eee48ad7612f77e",
      "kind": "transparent"
    }
  ],
  "impls": {
    "da0a0546183d529a4b5c14527febccd2de6a0f30fcbe26cf815fb6b6ead1d595": {
      "address": "0xbE1fa1653CB617A7Cad8DD3f0409D0801fEc5850",
      "txHash": "0xecc3ec11f1afbf6c9ea26875fef6182e595c41df1bd2e7f762ebafebe6c0c685",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "contract": "LiquidityBridgeContract",
            "label": "bridge",
            "type": "t_contract(Bridge)2338",
            "src": "../project:/contracts/LiquidityBridgeContract.sol:99"
          },
          {
            "contract": "LiquidityBridgeContract",
            "label": "balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidityBridgeContract.sol:100"
          },
          {
            "contract": "LiquidityBridgeContract",
            "label": "collateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidityBridgeContract.sol:101"
          },
          {
            "contract": "LiquidityBridgeContract",
            "label": "pegoutCollateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidityBridgeContract.sol:102"
          },
          {
            "contract": "LiquidityBridgeContract",
            "label": "liquidityProviders",
            "type": "t_mapping(t_uint256,t_struct(LiquidityProvider)4102_storage)",
            "src": "../project:/contracts/LiquidityBridgeContract.sol:103"
          },
          {
            "contract": "LiquidityBridgeContract",
            "label": "callRegistry",
            "type": "t_mapping(t_bytes32,t_struct(Registry)4084_storage)",
            "src": "../project:/contracts/LiquidityBridgeContract.sol:104"
          },
          {
            "contract": "LiquidityBridgeContract",
            "label": "resignationBlockNum",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidityBridgeContract.sol:105"
          },
          {
            "contract": "LiquidityBridgeContract",
            "label": "minCollateral",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContract.sol:107"
          },
          {
            "contract": "LiquidityBridgeContract",
            "label": "minPegIn",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContract.sol:108"
          },
          {
            "contract": "LiquidityBridgeContract",
            "label": "rewardP",
            "type": "t_uint32",
            "src": "../project:/contracts/LiquidityBridgeContract.sol:110"
          },
          {
            "contract": "LiquidityBridgeContract",
            "label": "resignDelayInBlocks",
            "type": "t_uint32",
            "src": "../project:/contracts/LiquidityBridgeContract.sol:111"
          },
          {
            "contract": "LiquidityBridgeContract",
            "label": "dust",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContract.sol:112"
          },
          {
            "contract": "LiquidityBridgeContract",
            "label": "providerId",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContract.sol:113"
          },
          {
            "contract": "LiquidityBridgeContract",
            "label": "btcBlockTime",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContract.sol:115"
          },
          {
            "contract": "LiquidityBridgeContract",
            "label": "mainnet",
            "type": "t_bool",
            "src": "../project:/contracts/LiquidityBridgeContract.sol:116"
          },
          {
            "contract": "LiquidityBridgeContract",
            "label": "processedQuotes",
            "type": "t_mapping(t_bytes32,t_uint8)",
            "src": "../project:/contracts/LiquidityBridgeContract.sol:118"
          },
          {
            "contract": "LiquidityBridgeContract",
            "label": "registeredPegoutQuotes",
            "type": "t_mapping(t_bytes32,t_struct(PegOutQuote)7060_storage)",
            "src": "../project:/contracts/LiquidityBridgeContract.sol:119"
          },
          {
            "contract": "LiquidityBridgeContract",
            "label": "pegoutRegistry",
            "type": "t_mapping(t_bytes32,t_struct(PegoutRecord)4089_storage)",
            "src": "../project:/contracts/LiquidityBridgeContract.sol:120"
          }
        ],
        "types": {
          "t_contract(Bridge)2338": {
            "label": "contract Bridge"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(LiquidityProvider)4102_storage)": {
            "label": "mapping(uint256 => struct LiquidityBridgeContract.LiquidityProvider)"
          },
          "t_struct(LiquidityProvider)4102_storage": {
            "label": "struct LiquidityBridgeContract.LiquidityProvider",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "provider",
                "type": "t_address"
              },
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "apiBaseUrl",
                "type": "t_string_storage"
              },
              {
                "label": "status",
                "type": "t_bool"
              },
              {
                "label": "providerType",
                "type": "t_string_storage"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(Registry)4084_storage)": {
            "label": "mapping(bytes32 => struct LiquidityBridgeContract.Registry)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(Registry)4084_storage": {
            "label": "struct LiquidityBridgeContract.Registry",
            "members": [
              {
                "label": "timestamp",
                "type": "t_uint32"
              },
              {
                "label": "success",
                "type": "t_bool"
              }
            ]
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_bytes32,t_uint8)": {
            "label": "mapping(bytes32 => uint8)"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_bytes32,t_struct(PegOutQuote)7060_storage)": {
            "label": "mapping(bytes32 => struct Quotes.PegOutQuote)"
          },
          "t_struct(PegOutQuote)7060_storage": {
            "label": "struct Quotes.PegOutQuote",
            "members": [
              {
                "label": "lbcAddress",
                "type": "t_address"
              },
              {
                "label": "lpRskAddress",
                "type": "t_address"
              },
              {
                "label": "btcRefundAddress",
                "type": "t_bytes_storage"
              },
              {
                "label": "rskRefundAddress",
                "type": "t_address"
              },
              {
                "label": "lpBtcAddress",
                "type": "t_bytes_storage"
              },
              {
                "label": "callFee",
                "type": "t_uint256"
              },
              {
                "label": "penaltyFee",
                "type": "t_uint256"
              },
              {
                "label": "nonce",
                "type": "t_int64"
              },
              {
                "label": "deposityAddress",
                "type": "t_bytes_storage"
              },
              {
                "label": "value",
                "type": "t_uint256"
              },
              {
                "label": "agreementTimestamp",
                "type": "t_uint32"
              },
              {
                "label": "depositDateLimit",
                "type": "t_uint32"
              },
              {
                "label": "depositConfirmations",
                "type": "t_uint16"
              },
              {
                "label": "transferConfirmations",
                "type": "t_uint16"
              },
              {
                "label": "transferTime",
                "type": "t_uint32"
              },
              {
                "label": "expireDate",
                "type": "t_uint32"
              },
              {
                "label": "expireBlock",
                "type": "t_uint32"
              }
            ]
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_int64": {
            "label": "int64"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_bytes32,t_struct(PegoutRecord)4089_storage)": {
            "label": "mapping(bytes32 => struct LiquidityBridgeContract.PegoutRecord)"
          },
          "t_struct(PegoutRecord)4089_storage": {
            "label": "struct LiquidityBridgeContract.PegoutRecord",
            "members": [
              {
                "label": "depositTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "completed",
                "type": "t_bool"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "90a13b12a1c79105378a05e67d9bb92fa14e6fa39baa8d1a8df8c8987ffc4c88": {
      "address": "0xe09e975980C467b06B154Ec804FBe65022b58007",
      "txHash": "0x0adac3c853f836ef2fc96a0c134d6e1efb366fbf8db3ef0c51f613ea6c64933d",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "contract": "LiquidityBridgeContract",
            "label": "bridge",
            "type": "t_contract(Bridge)2338",
            "src": "../project:/contracts/LiquidityBridgeContract.sol:99"
          },
          {
            "contract": "LiquidityBridgeContract",
            "label": "balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidityBridgeContract.sol:100"
          },
          {
            "contract": "LiquidityBridgeContract",
            "label": "collateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidityBridgeContract.sol:101"
          },
          {
            "contract": "LiquidityBridgeContract",
            "label": "pegoutCollateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidityBridgeContract.sol:102"
          },
          {
            "contract": "LiquidityBridgeContract",
            "label": "liquidityProviders",
            "type": "t_mapping(t_uint256,t_struct(LiquidityProvider)4102_storage)",
            "src": "../project:/contracts/LiquidityBridgeContract.sol:103"
          },
          {
            "contract": "LiquidityBridgeContract",
            "label": "callRegistry",
            "type": "t_mapping(t_bytes32,t_struct(Registry)4084_storage)",
            "src": "../project:/contracts/LiquidityBridgeContract.sol:104"
          },
          {
            "contract": "LiquidityBridgeContract",
            "label": "resignationBlockNum",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidityBridgeContract.sol:105"
          },
          {
            "contract": "LiquidityBridgeContract",
            "label": "minCollateral",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContract.sol:107"
          },
          {
            "contract": "LiquidityBridgeContract",
            "label": "minPegIn",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContract.sol:108"
          },
          {
            "contract": "LiquidityBridgeContract",
            "label": "rewardP",
            "type": "t_uint32",
            "src": "../project:/contracts/LiquidityBridgeContract.sol:110"
          },
          {
            "contract": "LiquidityBridgeContract",
            "label": "resignDelayInBlocks",
            "type": "t_uint32",
            "src": "../project:/contracts/LiquidityBridgeContract.sol:111"
          },
          {
            "contract": "LiquidityBridgeContract",
            "label": "dust",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContract.sol:112"
          },
          {
            "contract": "LiquidityBridgeContract",
            "label": "providerId",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContract.sol:113"
          },
          {
            "contract": "LiquidityBridgeContract",
            "label": "btcBlockTime",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityBridgeContract.sol:115"
          },
          {
            "contract": "LiquidityBridgeContract",
            "label": "mainnet",
            "type": "t_bool",
            "src": "../project:/contracts/LiquidityBridgeContract.sol:116"
          },
          {
            "contract": "LiquidityBridgeContract",
            "label": "processedQuotes",
            "type": "t_mapping(t_bytes32,t_uint8)",
            "src": "../project:/contracts/LiquidityBridgeContract.sol:118"
          },
          {
            "contract": "LiquidityBridgeContract",
            "label": "registeredPegoutQuotes",
            "type": "t_mapping(t_bytes32,t_struct(PegOutQuote)7068_storage)",
            "src": "../project:/contracts/LiquidityBridgeContract.sol:119"
          },
          {
            "contract": "LiquidityBridgeContract",
            "label": "pegoutRegistry",
            "type": "t_mapping(t_bytes32,t_struct(PegoutRecord)4089_storage)",
            "src": "../project:/contracts/LiquidityBridgeContract.sol:120"
          }
        ],
        "types": {
          "t_contract(Bridge)2338": {
            "label": "contract Bridge"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(LiquidityProvider)4102_storage)": {
            "label": "mapping(uint256 => struct LiquidityBridgeContract.LiquidityProvider)"
          },
          "t_struct(LiquidityProvider)4102_storage": {
            "label": "struct LiquidityBridgeContract.LiquidityProvider",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "provider",
                "type": "t_address"
              },
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "apiBaseUrl",
                "type": "t_string_storage"
              },
              {
                "label": "status",
                "type": "t_bool"
              },
              {
                "label": "providerType",
                "type": "t_string_storage"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(Registry)4084_storage)": {
            "label": "mapping(bytes32 => struct LiquidityBridgeContract.Registry)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(Registry)4084_storage": {
            "label": "struct LiquidityBridgeContract.Registry",
            "members": [
              {
                "label": "timestamp",
                "type": "t_uint32"
              },
              {
                "label": "success",
                "type": "t_bool"
              }
            ]
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_bytes32,t_uint8)": {
            "label": "mapping(bytes32 => uint8)"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_bytes32,t_struct(PegOutQuote)7068_storage)": {
            "label": "mapping(bytes32 => struct Quotes.PegOutQuote)"
          },
          "t_struct(PegOutQuote)7068_storage": {
            "label": "struct Quotes.PegOutQuote",
            "members": [
              {
                "label": "lbcAddress",
                "type": "t_address"
              },
              {
                "label": "lpRskAddress",
                "type": "t_address"
              },
              {
                "label": "btcRefundAddress",
                "type": "t_bytes_storage"
              },
              {
                "label": "rskRefundAddress",
                "type": "t_address"
              },
              {
                "label": "lpBtcAddress",
                "type": "t_bytes_storage"
              },
              {
                "label": "callFee",
                "type": "t_uint256"
              },
              {
                "label": "penaltyFee",
                "type": "t_uint256"
              },
              {
                "label": "nonce",
                "type": "t_int64"
              },
              {
                "label": "deposityAddress",
                "type": "t_bytes_storage"
              },
              {
                "label": "value",
                "type": "t_uint256"
              },
              {
                "label": "agreementTimestamp",
                "type": "t_uint32"
              },
              {
                "label": "depositDateLimit",
                "type": "t_uint32"
              },
              {
                "label": "depositConfirmations",
                "type": "t_uint16"
              },
              {
                "label": "transferConfirmations",
                "type": "t_uint16"
              },
              {
                "label": "transferTime",
                "type": "t_uint32"
              },
              {
                "label": "expireDate",
                "type": "t_uint32"
              },
              {
                "label": "expireBlock",
                "type": "t_uint32"
              }
            ]
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_int64": {
            "label": "int64"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_bytes32,t_struct(PegoutRecord)4089_storage)": {
            "label": "mapping(bytes32 => struct LiquidityBridgeContract.PegoutRecord)"
          },
          "t_struct(PegoutRecord)4089_storage": {
            "label": "struct LiquidityBridgeContract.PegoutRecord",
            "members": [
              {
                "label": "depositTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "completed",
                "type": "t_bool"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}
